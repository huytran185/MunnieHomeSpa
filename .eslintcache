[{"C:\\reactjs\\munniehomespa-project\\src\\index.js":"1","C:\\reactjs\\munniehomespa-project\\src\\reportWebVitals.js":"2","C:\\reactjs\\munniehomespa-project\\src\\App.js":"3","C:\\reactjs\\munniehomespa-project\\src\\components\\UI\\Layout\\Layout.js":"4","C:\\reactjs\\munniehomespa-project\\src\\hoc\\Auxulliary.js":"5","C:\\reactjs\\munniehomespa-project\\src\\components\\UI\\Backdrop\\Backdrop.js":"6","C:\\reactjs\\munniehomespa-project\\src\\components\\UI\\Button\\Button.js":"7","C:\\reactjs\\munniehomespa-project\\src\\pages\\Index\\Index.js":"8","C:\\reactjs\\munniehomespa-project\\src\\pages\\Index\\About\\About.js":"9","C:\\reactjs\\munniehomespa-project\\src\\pages\\Index\\Welcome\\Welcome.js":"10","C:\\reactjs\\munniehomespa-project\\src\\pages\\Error\\Error.js":"11","C:\\reactjs\\munniehomespa-project\\src\\pages\\Service\\Service.js":"12","C:\\reactjs\\munniehomespa-project\\src\\pages\\Index\\Services\\Services.js":"13","C:\\reactjs\\munniehomespa-project\\src\\pages\\Index\\Voucher\\Voucher.js":"14","C:\\reactjs\\munniehomespa-project\\src\\axios-order.js":"15","C:\\reactjs\\munniehomespa-project\\src\\components\\UI\\Spinner\\Spinner.js":"16","C:\\reactjs\\munniehomespa-project\\src\\components\\UI\\Social\\Social.js":"17","C:\\reactjs\\munniehomespa-project\\src\\pages\\Contact\\Contact.js":"18","C:\\reactjs\\munniehomespa-project\\src\\pages\\InputHandler.js":"19","C:\\reactjs\\munniehomespa-project\\src\\components\\Search\\Search.js":"20","C:\\reactjs\\munniehomespa-project\\src\\components\\Pagination\\Pagination.js":"21","C:\\reactjs\\munniehomespa-project\\src\\components\\UI\\Notifications\\Notifications.js":"22","C:\\reactjs\\munniehomespa-project\\src\\pages\\Booking\\Booking.js":"23","C:\\reactjs\\munniehomespa-project\\src\\pages\\Booking\\styles.js":"24","C:\\reactjs\\munniehomespa-project\\src\\pages\\Booking\\Customer\\Customer.js":"25","C:\\reactjs\\munniehomespa-project\\src\\pages\\Booking\\Service\\Service.js":"26","C:\\reactjs\\munniehomespa-project\\src\\pages\\Booking\\Time\\Time.js":"27","C:\\reactjs\\munniehomespa-project\\src\\pages\\Booking\\Staff\\Staff.js":"28","C:\\reactjs\\munniehomespa-project\\src\\pages\\Admin\\Staff.js":"29","C:\\reactjs\\munniehomespa-project\\src\\pages\\Admin\\Type.js":"30","C:\\reactjs\\munniehomespa-project\\src\\pages\\Admin\\Service.js":"31","C:\\reactjs\\munniehomespa-project\\src\\pages\\Admin\\Voucher.js":"32","C:\\reactjs\\munniehomespa-project\\src\\pages\\Admin\\Customer.js":"33","C:\\reactjs\\munniehomespa-project\\src\\pages\\Admin\\addForm.js":"34","C:\\reactjs\\munniehomespa-project\\src\\pages\\Admin\\displayTable.js":"35","C:\\reactjs\\munniehomespa-project\\src\\pages\\Admin\\styles.js":"36","C:\\reactjs\\munniehomespa-project\\src\\pages\\Auth\\Login.js":"37","C:\\reactjs\\munniehomespa-project\\src\\pages\\ShowBook\\ShowBook.js":"38","C:\\reactjs\\munniehomespa-project\\src\\store.js":"39","C:\\reactjs\\munniehomespa-project\\src\\reducers\\index.js":"40","C:\\reactjs\\munniehomespa-project\\src\\reducers\\service.js":"41","C:\\reactjs\\munniehomespa-project\\src\\actions\\service.js":"42","C:\\reactjs\\munniehomespa-project\\src\\constants\\service.js":"43","C:\\reactjs\\munniehomespa-project\\src\\reducers\\voucher.js":"44","C:\\reactjs\\munniehomespa-project\\src\\constants\\voucher.js":"45","C:\\reactjs\\munniehomespa-project\\src\\actions\\voucher.js":"46","C:\\reactjs\\munniehomespa-project\\src\\reducers\\type.js":"47","C:\\reactjs\\munniehomespa-project\\src\\constants\\type.js":"48","C:\\reactjs\\munniehomespa-project\\src\\actions\\type.js":"49","C:\\reactjs\\munniehomespa-project\\src\\api\\api.js":"50","C:\\reactjs\\munniehomespa-project\\src\\reducers\\customer.js":"51","C:\\reactjs\\munniehomespa-project\\src\\constants\\customer.js":"52","C:\\reactjs\\munniehomespa-project\\src\\actions\\customer.js":"53","C:\\reactjs\\munniehomespa-project\\src\\reducers\\staff.js":"54","C:\\reactjs\\munniehomespa-project\\src\\actions\\staff.js":"55","C:\\reactjs\\munniehomespa-project\\src\\constants\\staff.js":"56","C:\\reactjs\\munniehomespa-project\\src\\reducers\\book.js":"57","C:\\reactjs\\munniehomespa-project\\src\\constants\\book.js":"58","C:\\reactjs\\munniehomespa-project\\src\\actions\\book.js":"59","C:\\reactjs\\munniehomespa-project\\src\\pages\\ShowBook\\SelectStaff.js":"60","C:\\reactjs\\munniehomespa-project\\src\\pages\\ShowBook\\ShowInfo.js":"61","C:\\reactjs\\munniehomespa-project\\src\\pages\\ShowBook\\styles.js":"62","C:\\reactjs\\munniehomespa-project\\src\\components\\UI\\ConfirmMessage\\ConfirmMessage.js":"63","C:\\reactjs\\munniehomespa-project\\src\\actions\\auth.js":"64","C:\\reactjs\\munniehomespa-project\\src\\constants\\auth.js":"65","C:\\reactjs\\munniehomespa-project\\src\\reducers\\auth.js":"66","C:\\reactjs\\munniehomespa-project\\src\\components\\AdminUI\\Header.js":"67","C:\\reactjs\\munniehomespa-project\\src\\components\\AdminUI\\Button.js":"68","C:\\reactjs\\munniehomespa-project\\src\\Config\\dataConfig.js":"69","C:\\reactjs\\munniehomespa-project\\src\\Config\\tableConfig.js":"70","C:\\reactjs\\munniehomespa-project\\src\\Config\\firebaseConfig.js":"71","C:\\reactjs\\munniehomespa-project\\src\\components\\UI\\Footer\\Footer.js":"72","C:\\reactjs\\munniehomespa-project\\src\\components\\UI\\Footer\\FooterColumn.js":"73","C:\\reactjs\\munniehomespa-project\\src\\components\\UI\\Header\\Header.js":"74","C:\\reactjs\\munniehomespa-project\\src\\components\\UI\\Header\\Navigation.js":"75","C:\\reactjs\\munniehomespa-project\\src\\components\\UI\\Header\\SideDrawer\\SideDrawer.js":"76","C:\\reactjs\\munniehomespa-project\\src\\components\\UI\\Header\\NavigationItem.js":"77","C:\\reactjs\\munniehomespa-project\\src\\pages\\Contact\\Info.js":"78","C:\\reactjs\\munniehomespa-project\\src\\pages\\Index\\About\\Content.js":"79","C:\\reactjs\\munniehomespa-project\\src\\pages\\Index\\Services\\Service.js":"80","C:\\reactjs\\munniehomespa-project\\src\\pages\\Index\\Voucher\\Slider.js":"81","C:\\reactjs\\munniehomespa-project\\src\\pages\\Index\\Welcome\\Book.js":"82","C:\\reactjs\\munniehomespa-project\\src\\pages\\Service\\ServiceItem.js":"83","C:\\reactjs\\munniehomespa-project\\src\\pages\\Service\\Type.js":"84","C:\\reactjs\\munniehomespa-project\\src\\components\\Input\\Input.js":"85","C:\\reactjs\\munniehomespa-project\\src\\components\\Input\\styles.js":"86"},{"size":584,"mtime":1618566090244,"results":"87","hashOfConfig":"88"},{"size":375,"mtime":1610970252756,"results":"89","hashOfConfig":"88"},{"size":2921,"mtime":1619853089888,"results":"90","hashOfConfig":"88"},{"size":603,"mtime":1619860562163,"results":"91","hashOfConfig":"88"},{"size":59,"mtime":1611056861317,"results":"92","hashOfConfig":"88"},{"size":674,"mtime":1619882208312,"results":"93","hashOfConfig":"88"},{"size":821,"mtime":1619883033241,"results":"94","hashOfConfig":"88"},{"size":703,"mtime":1619856591989,"results":"95","hashOfConfig":"88"},{"size":403,"mtime":1619856766996,"results":"96","hashOfConfig":"88"},{"size":635,"mtime":1619857129553,"results":"97","hashOfConfig":"88"},{"size":202,"mtime":1619856142317,"results":"98","hashOfConfig":"88"},{"size":3884,"mtime":1619857231916,"results":"99","hashOfConfig":"88"},{"size":2140,"mtime":1619856859580,"results":"100","hashOfConfig":"88"},{"size":400,"mtime":1619857038235,"results":"101","hashOfConfig":"88"},{"size":154,"mtime":1614233705814,"results":"102","hashOfConfig":"88"},{"size":275,"mtime":1619777626418,"results":"103","hashOfConfig":"88"},{"size":728,"mtime":1619777593825,"results":"104","hashOfConfig":"88"},{"size":2281,"mtime":1619856122049,"results":"105","hashOfConfig":"88"},{"size":1212,"mtime":1618769324616,"results":"106","hashOfConfig":"88"},{"size":883,"mtime":1619859097348,"results":"107","hashOfConfig":"88"},{"size":1218,"mtime":1619883195535,"results":"108","hashOfConfig":"88"},{"size":1192,"mtime":1619777572412,"results":"109","hashOfConfig":"88"},{"size":3522,"mtime":1619961366158,"results":"110","hashOfConfig":"88"},{"size":958,"mtime":1617432379320,"results":"111","hashOfConfig":"88"},{"size":5126,"mtime":1619861178637,"results":"112","hashOfConfig":"88"},{"size":5253,"mtime":1619861282335,"results":"113","hashOfConfig":"88"},{"size":1238,"mtime":1619861324060,"results":"114","hashOfConfig":"88"},{"size":4283,"mtime":1619861302025,"results":"115","hashOfConfig":"88"},{"size":3181,"mtime":1619855815686,"results":"116","hashOfConfig":"88"},{"size":3188,"mtime":1619855833462,"results":"117","hashOfConfig":"88"},{"size":4234,"mtime":1619855802211,"results":"118","hashOfConfig":"88"},{"size":3233,"mtime":1619855841245,"results":"119","hashOfConfig":"88"},{"size":3265,"mtime":1619855760080,"results":"120","hashOfConfig":"88"},{"size":4492,"mtime":1619961374197,"results":"121","hashOfConfig":"88"},{"size":7405,"mtime":1619862122465,"results":"122","hashOfConfig":"88"},{"size":397,"mtime":1618319610439,"results":"123","hashOfConfig":"88"},{"size":4100,"mtime":1619961348457,"results":"124","hashOfConfig":"88"},{"size":11870,"mtime":1619944282029,"results":"125","hashOfConfig":"88"},{"size":327,"mtime":1618566146547,"results":"126","hashOfConfig":"88"},{"size":564,"mtime":1619512021505,"results":"127","hashOfConfig":"88"},{"size":2154,"mtime":1618200279708,"results":"128","hashOfConfig":"88"},{"size":2886,"mtime":1619776095414,"results":"129","hashOfConfig":"88"},{"size":718,"mtime":1618200108135,"results":"130","hashOfConfig":"88"},{"size":2153,"mtime":1618214857949,"results":"131","hashOfConfig":"88"},{"size":718,"mtime":1618214925822,"results":"132","hashOfConfig":"88"},{"size":2892,"mtime":1619776294541,"results":"133","hashOfConfig":"88"},{"size":2195,"mtime":1618771457506,"results":"134","hashOfConfig":"88"},{"size":691,"mtime":1618204162526,"results":"135","hashOfConfig":"88"},{"size":2889,"mtime":1619776250046,"results":"136","hashOfConfig":"88"},{"size":5954,"mtime":1619854679108,"results":"137","hashOfConfig":"88"},{"size":2179,"mtime":1618215846512,"results":"138","hashOfConfig":"88"},{"size":742,"mtime":1618215721933,"results":"139","hashOfConfig":"88"},{"size":2931,"mtime":1619776050670,"results":"140","hashOfConfig":"88"},{"size":2104,"mtime":1618217002668,"results":"141","hashOfConfig":"88"},{"size":2829,"mtime":1619776220638,"results":"142","hashOfConfig":"88"},{"size":670,"mtime":1618216614058,"results":"143","hashOfConfig":"88"},{"size":2075,"mtime":1618768748146,"results":"144","hashOfConfig":"88"},{"size":643,"mtime":1618768532106,"results":"145","hashOfConfig":"88"},{"size":2858,"mtime":1619948416514,"results":"146","hashOfConfig":"88"},{"size":857,"mtime":1619961357420,"results":"147","hashOfConfig":"88"},{"size":5072,"mtime":1619862952074,"results":"148","hashOfConfig":"88"},{"size":838,"mtime":1619942943732,"results":"149","hashOfConfig":"88"},{"size":1642,"mtime":1619859326767,"results":"150","hashOfConfig":"88"},{"size":2548,"mtime":1619775944200,"results":"151","hashOfConfig":"88"},{"size":301,"mtime":1619777664954,"results":"152","hashOfConfig":"88"},{"size":1666,"mtime":1619777695310,"results":"153","hashOfConfig":"88"},{"size":3390,"mtime":1619885795749,"results":"154","hashOfConfig":"88"},{"size":2009,"mtime":1619858957806,"results":"155","hashOfConfig":"88"},{"size":12753,"mtime":1619854283853,"results":"156","hashOfConfig":"88"},{"size":2424,"mtime":1619854289814,"results":"157","hashOfConfig":"88"},{"size":740,"mtime":1619854675541,"results":"158","hashOfConfig":"88"},{"size":1299,"mtime":1619776885604,"results":"159","hashOfConfig":"88"},{"size":445,"mtime":1619882972902,"results":"160","hashOfConfig":"88"},{"size":1024,"mtime":1619859516403,"results":"161","hashOfConfig":"88"},{"size":862,"mtime":1619962372769,"results":"162","hashOfConfig":"88"},{"size":1072,"mtime":1619859500574,"results":"163","hashOfConfig":"88"},{"size":469,"mtime":1619859661369,"results":"164","hashOfConfig":"88"},{"size":448,"mtime":1619861364553,"results":"165","hashOfConfig":"88"},{"size":1143,"mtime":1619856714537,"results":"166","hashOfConfig":"88"},{"size":793,"mtime":1619856851409,"results":"167","hashOfConfig":"88"},{"size":1753,"mtime":1619964247065,"results":"168","hashOfConfig":"88"},{"size":505,"mtime":1619861433373,"results":"169","hashOfConfig":"88"},{"size":2100,"mtime":1619857243795,"results":"170","hashOfConfig":"88"},{"size":657,"mtime":1619857221921,"results":"171","hashOfConfig":"88"},{"size":3548,"mtime":1619961402915,"results":"172","hashOfConfig":"88"},{"size":886,"mtime":1619508702623,"results":"173","hashOfConfig":"88"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},"qpybk7",{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"176"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227","usedDeprecatedRules":"176"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230","usedDeprecatedRules":"176"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"235","usedDeprecatedRules":"176"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"238","usedDeprecatedRules":"176"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"241","usedDeprecatedRules":"176"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"244","usedDeprecatedRules":"176"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"247","usedDeprecatedRules":"176"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"250","usedDeprecatedRules":"176"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"259","messages":"260","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"261","usedDeprecatedRules":"176"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"304","messages":"305","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"306","messages":"307","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"330","messages":"331","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"332","messages":"333","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"334","messages":"335","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"336","messages":"337","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"338","messages":"339","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"342","messages":"343","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"344","messages":"345","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"346","messages":"347","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"348","messages":"349","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"350","messages":"351","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"352","messages":"353","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"354","messages":"355","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"356","messages":"357","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\reactjs\\munniehomespa-project\\src\\index.js",[],["358","359"],"C:\\reactjs\\munniehomespa-project\\src\\reportWebVitals.js",[],"C:\\reactjs\\munniehomespa-project\\src\\App.js",[],"C:\\reactjs\\munniehomespa-project\\src\\components\\UI\\Layout\\Layout.js",[],"C:\\reactjs\\munniehomespa-project\\src\\hoc\\Auxulliary.js",[],"C:\\reactjs\\munniehomespa-project\\src\\components\\UI\\Backdrop\\Backdrop.js",[],"C:\\reactjs\\munniehomespa-project\\src\\components\\UI\\Button\\Button.js",[],"C:\\reactjs\\munniehomespa-project\\src\\pages\\Index\\Index.js",[],"C:\\reactjs\\munniehomespa-project\\src\\pages\\Index\\About\\About.js",[],"C:\\reactjs\\munniehomespa-project\\src\\pages\\Index\\Welcome\\Welcome.js",[],"C:\\reactjs\\munniehomespa-project\\src\\pages\\Error\\Error.js",[],"C:\\reactjs\\munniehomespa-project\\src\\pages\\Service\\Service.js",["360","361"],"import React, { useEffect} from 'react'\r\nimport classes from './Service.module.css';\r\nimport {Helmet} from 'react-helmet';\r\nimport Layout from '../../components/UI/Layout/Layout';\r\nimport Aux from '../../hoc/Auxulliary';\r\nimport ServiceItem from './ServiceItem';\r\nimport Type from './Type';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {getService} from '../../actions/service';\r\nimport {getType, selectType} from '../../actions/type';\r\n\r\n//Service Page\r\n\r\nconst Service =()=>{\r\n    const serviceList = useSelector(state=>state.service.list);\r\n    const serviceLoading = useSelector(state=>state.service.loading);\r\n    const serviceError = useSelector(state=>state.service.error);\r\n    const typeList = useSelector(state=>state.type.list);\r\n    const typeLoading = useSelector(state=>state.type.loading);\r\n    const typeError = useSelector(state=>state.type.error);\r\n    const dispatch = useDispatch();\r\n    //get data from firebase using firebase npm\r\n    useEffect(() => {\r\n        if(Object.keys(serviceList).length === 0){\r\n            dispatch(getService())\r\n        }\r\n        if(Object.keys(typeList).length === 0){\r\n            dispatch(getType())\r\n        }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n    //choose Type and display Service\r\n    const chooseTypeHandler = (index)=>{\r\n        let newTypes = {...typeList};\r\n        Object.values(newTypes).map(type=>(type.under = false));\r\n        newTypes[index].under = true;\r\n        dispatch(selectType(newTypes));\r\n    }\r\n    //display Spinner and choose type and services\r\n    let servicePage = <Spinner/>\r\n    if(!serviceLoading && !typeLoading){\r\n        let chosenType = null;\r\n        Object.values(typeList).find(type=>{\r\n            if(type.under === true){\r\n                chosenType = type.id;\r\n                return chosenType;\r\n            }\r\n            return null;\r\n        })\r\n        let typeDisplay = [];\r\n        for(let key in typeList){\r\n            typeDisplay.push(\r\n                <Type\r\n                id={typeList[key].data}\r\n                key={key}\r\n                name={typeList[key].name}\r\n                under={typeList[key].under}\r\n                clicked= {()=>chooseTypeHandler(key)}\r\n                />\r\n            )\r\n        }\r\n        let serviceDisplay = [];\r\n        for(let key in serviceList){\r\n            if(serviceList[key]['type'] === chosenType){\r\n                serviceDisplay.push(\r\n                    <ServiceItem\r\n                    key = {key}\r\n                    service = {serviceList[key]['name']}\r\n                    image = {serviceList[key]['image']}\r\n                    des = {serviceList[key]['des']}\r\n                    english = {serviceList[key]['english']}\r\n                    time = {serviceList[key]['time']}\r\n                    price = {serviceList[key]['price']}\r\n                    />\r\n                )\r\n            }\r\n        }\r\n        servicePage = (\r\n            <div>\r\n                <div className={classes.TypeList}>\r\n                    {typeDisplay}\r\n                </div>\r\n                <div className = {classes.ServiceList}>\r\n                    {serviceDisplay}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n   \r\n    return(\r\n        <Aux>\r\n            <Helmet>\r\n                <title>Munnie Homéspa | Service Page</title>\r\n            </Helmet>\r\n            <Layout>\r\n                <div className = {classes.Page}>\r\n                    <div className = {classes.Header}>\r\n                        <div className={classes.Title}>Service</div>\r\n                    </div>\r\n                    <div className={classes.Content}>\r\n                        {servicePage}\r\n                    </div>\r\n                </div>\r\n            </Layout>\r\n        </Aux>\r\n    )\r\n}\r\nexport default Service;","C:\\reactjs\\munniehomespa-project\\src\\pages\\Index\\Services\\Services.js",[],"C:\\reactjs\\munniehomespa-project\\src\\pages\\Index\\Voucher\\Voucher.js",[],"C:\\reactjs\\munniehomespa-project\\src\\axios-order.js",[],["362","363"],"C:\\reactjs\\munniehomespa-project\\src\\components\\UI\\Spinner\\Spinner.js",[],"C:\\reactjs\\munniehomespa-project\\src\\components\\UI\\Social\\Social.js",[],"C:\\reactjs\\munniehomespa-project\\src\\pages\\Contact\\Contact.js",[],"C:\\reactjs\\munniehomespa-project\\src\\pages\\InputHandler.js",[],"C:\\reactjs\\munniehomespa-project\\src\\components\\Search\\Search.js",[],"C:\\reactjs\\munniehomespa-project\\src\\components\\Pagination\\Pagination.js",[],"C:\\reactjs\\munniehomespa-project\\src\\components\\UI\\Notifications\\Notifications.js",[],"C:\\reactjs\\munniehomespa-project\\src\\pages\\Booking\\Booking.js",[],"C:\\reactjs\\munniehomespa-project\\src\\pages\\Booking\\styles.js",[],"C:\\reactjs\\munniehomespa-project\\src\\pages\\Booking\\Customer\\Customer.js",["364"],"import React, {useEffect, useState, useRef} from 'react'\r\nimport useStyles from \"../styles.js\"\r\nimport Search from '../../../components/Search/Search';\r\nimport {Typography} from '@material-ui/core';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {getCustomer} from '../../../actions/customer';\r\nimport PropTypes from 'prop-types';\r\n//The component that accept customer information of the booking\r\n\r\nconst Customer = (props) => {\r\n    const classes = useStyles();\r\n    const [search, setSearch] = useState('');\r\n    const [display, setDisplay] = useState(false);\r\n    const customerList = useSelector(state=>state.customer.list);\r\n    const customerLoading = useSelector(state=>state.customer.loading);\r\n    const customerError = useSelector(state=>state.customer.error);\r\n    const dispatch = useDispatch();\r\n    const [selected, setSelected] = useState({\r\n        name: '', phone: ''\r\n    })\r\n    const wrapperRef = useRef(null);\r\n    const [config] = useState({\r\n        name:{\r\n        title:\"Name\",\r\n        name:\"name\",\r\n        type:\"text\"\r\n    },\r\n    phone:{\r\n        title:\"Phone Number\",\r\n        name:\"phone\",\r\n        type:\"text\"\r\n    },\r\n    email:{\r\n        title:\"Email\",\r\n        name:\"email\",\r\n        type:\"text\"\r\n    },\r\n    })\r\n    useEffect(()=>{\r\n        if(Object.keys(customerList).length === 0){\r\n            dispatch(getCustomer())\r\n        }\r\n        document.addEventListener(\"mousedown\", handlerClickHandler)\r\n        return()=>{\r\n            document.removeEventListener(\"mousedown\", handlerClickHandler);\r\n        }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    },[])\r\n    useEffect(()=>{\r\n        if(props.bookInfo['customerId'] !== ''){\r\n            setSearch(props.bookInfo['customerName']);\r\n            setSelected(\r\n                {\r\n                    name: props.bookInfo['customerName'], \r\n                    phone: props.bookInfo['customerPhone']\r\n                })\r\n        }\r\n    },[props.bookInfo])\r\n    const handlerClickHandler= (event)=>{\r\n        const {current: wrap}= wrapperRef;\r\n        if(wrap && !wrap.contains(event.target)){\r\n            setDisplay(false)\r\n        }\r\n    }\r\n\r\n    let tableArray = [];\r\n        if(!customerLoading){\r\n            for(let el in customerList){\r\n                let content={};\r\n                for(let key in config){\r\n                    content[config[key][\"name\"]]= customerList[el][config[key][\"name\"]]\r\n                }\r\n                tableArray.push({\r\n                    id: el,\r\n                    data: content\r\n                })\r\n            }\r\n        }\r\n\r\n    const suggestSelectHandler =(id,name, phone,email)=>{\r\n        setSearch(name);\r\n        setDisplay(!display);\r\n        setSelected({name: name, phone: phone})\r\n        props.setInfo({\r\n            ...props.bookInfo,\r\n            customerId:id, \r\n            customerName:name,\r\n            customerPhone:phone,\r\n            customerEmail:email,\r\n        })\r\n        \r\n    }\r\n    const onChangeSearchHandler = (e)=>{\r\n        setSearch(e.target.value);\r\n        if(!e.target.value){\r\n            setSelected({name: '', phone: ''})\r\n            props.setInfo({\r\n                ...props.bookInfo,\r\n                customerId:'', \r\n                customerName:'',\r\n                customerPhone:'',\r\n                customerEmail:'',\r\n        })\r\n        }\r\n    }\r\n    return (\r\n        <fieldset ref = {wrapperRef}>\r\n            <legend>Thông tin khách hàng</legend>\r\n            <div className={classes.Search}>\r\n                <Search valued ={search}\r\n                placeholder = \"Nhập tên khách hàng hoặc số điện thoại\" \r\n                onChanged={(e)=>onChangeSearchHandler(e)}\r\n                onClicked ={()=>setDisplay(!display)}/>\r\n                {display && (\r\n                    <div className={classes.SuggestContainer}>\r\n                        {tableArray.filter(element=>{\r\n                            return element[\"data\"][\"name\"].toLowerCase().includes(search.toLowerCase())||element[\"data\"][\"phone\"].toLowerCase().includes(search.toLowerCase())\r\n                        })\r\n                        .map((v)=>{\r\n                            return <div className={classes.Suggest} \r\n                            key={v.id} \r\n                            onClick={()=>suggestSelectHandler(v[\"id\"],v[\"data\"][\"name\"],v[\"data\"][\"phone\"],v[\"data\"][\"email\"])}>\r\n                                {v[\"data\"][\"name\"]} - {v[\"data\"][\"phone\"]}\r\n                            </div>\r\n                        })}\r\n                    </div>\r\n                )}\r\n            </div>\r\n            <Typography variant=\"body1\" display=\"block\" className={classes.Info}>\r\n                Tên khách hàng: \r\n                {selected[\"name\"]}\r\n            </Typography>\r\n            <Typography variant=\"body1\" display=\"block\" className={classes.Info}>\r\n                Số điện thoại: \r\n                {selected[\"phone\"]}\r\n            </Typography>\r\n        </fieldset>\r\n    )\r\n}\r\n\r\nCustomer.propTypes={\r\n    bookInfo: PropTypes.object,\r\n    setInfo: PropTypes.func,\r\n}\r\nexport default Customer\r\n","C:\\reactjs\\munniehomespa-project\\src\\pages\\Booking\\Service\\Service.js",["365"],"import React, {useState, useEffect,useRef} from 'react'\r\nimport Search from '../../../components/Search/Search';\r\nimport useStyles from '../styles.js';\r\nimport {Typography} from '@material-ui/core';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {getService} from '../../../actions/service';\r\nimport PropTypes from 'prop-types';\r\n//The component that accept service information for the booking\r\n\r\nconst Service = (props) => {\r\n    const classes = useStyles();\r\n    // const [data, setData] = useState(null);\r\n    const [search, setSearch] = useState('');\r\n    const [display, setDisplay] = useState(false);\r\n    const wrapperRef = useRef(null);\r\n    const serviceList = useSelector(state=>state.service.list);\r\n    const serviceLoading = useSelector(state=>state.service.loading);\r\n    const serviceError = useSelector(state=>state.service.error);\r\n    const dispatch = useDispatch();\r\n    const [selected, setSelected] = useState({\r\n        name:'',\r\n        time:'',\r\n        price:''\r\n        \r\n    })\r\n    const [config]= useState({\r\n        name:{\r\n            title:\"Service Name\",\r\n            name:\"name\",\r\n            type:\"text\"\r\n            },\r\n        price:{\r\n            title:\"Service Price\",\r\n            name:\"price\",\r\n            type:\"text\"\r\n        },\r\n        time:{\r\n            title:\"Service Duration\",\r\n            name:\"time\",\r\n            type:\"text\"\r\n        },\r\n    })\r\n    useEffect(()=>{\r\n        if(Object.keys(serviceList).length === 0){\r\n            dispatch(getService())\r\n        }\r\n        document.addEventListener(\"mousedown\", handlerClickHandler)\r\n        return()=>{\r\n            document.removeEventListener(\"mousedown\", handlerClickHandler);\r\n        }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    },[])\r\n\r\n    useEffect(()=>{\r\n        if(props.bookInfo['serviceId'] !== ''){\r\n            setSearch(props.bookInfo['serviceName']);\r\n            setSelected(\r\n                {\r\n                    name: props.bookInfo['serviceName'], \r\n                    time: props.bookInfo['duration'],\r\n                    price: props.bookInfo['price']\r\n                })\r\n        }\r\n    },[props.bookInfo])\r\n    const handlerClickHandler= (event)=>{\r\n        const {current: wrap}= wrapperRef;\r\n        if(wrap && !wrap.contains(event.target)){\r\n            setDisplay(false)\r\n        }\r\n    }\r\n    let tableArray = [];\r\n        if(!serviceLoading){\r\n            for(let el in serviceList){\r\n                let content={};\r\n                for(let key in config){\r\n                    content[config[key][\"name\"]]= serviceList[el][config[key][\"name\"]]\r\n                }\r\n                tableArray.push({\r\n                    id: el,\r\n                    data: content\r\n                })\r\n            }\r\n        }\r\n    \r\n    const suggestSelectHandler =(id,name, time, price)=>{\r\n        setSearch(name);\r\n        setDisplay(!display);\r\n        setSelected({name: name, time: time, price: price})\r\n        props.setInfo({\r\n            ...props.bookInfo,\r\n            serviceId:id, \r\n            serviceName:name, \r\n            duration:time, \r\n            price:price,\r\n        })\r\n    }\r\n    const onChangeSearchHandler = (e)=>{\r\n        setSearch(e.target.value);\r\n        if(!e.target.value){\r\n            setSelected({name: '', phone: ''})\r\n            props.setInfo({\r\n                ...props.bookInfo,\r\n                serviceId: '',\r\n                serviceName: '',\r\n                duration: '',\r\n                price: '',\r\n        })\r\n        }\r\n    }\r\n    return (\r\n        <fieldset ref = {wrapperRef}>\r\n            <legend>Thông tin dịch vụ</legend>\r\n            <div className={classes.Search}>\r\n                <Search valued = {search}\r\n                placeholder = \"Nhâp tên dịch vụ\"\r\n                onChanged={(e)=>onChangeSearchHandler(e)}\r\n                onClicked={()=>setDisplay(!display)}\r\n                />\r\n                {display && (\r\n                    <div className={classes.SuggestContainer}>\r\n                        {tableArray.filter(element=>{\r\n                            return element[\"data\"][\"name\"].toLowerCase().includes(search.toLowerCase())\r\n                        }).map((v)=>{\r\n                            return(<div className={classes.Suggest} \r\n                                key ={v.id}\r\n                                onClick = {()=>suggestSelectHandler(v[\"id\"],v[\"data\"][\"name\"],v[\"data\"][\"time\"],v[\"data\"][\"price\"])}>\r\n                                    {v[\"data\"][\"name\"]} - {v[\"data\"][\"time\"]} phút - {v[\"data\"][\"price\"]}.000VND\r\n                                </div>)\r\n                        })}\r\n                    </div>\r\n                )}\r\n            </div>\r\n            <Typography variant=\"body1\" display=\"block\" className={classes.Info}>Tên dịch vụ: {selected[\"name\"]}</Typography>\r\n            <Typography variant=\"body1\" display=\"block\" className={classes.Info}>Thời gian: {selected[\"time\"]}</Typography>\r\n            <Typography variant=\"body1\" display=\"block\" className={classes.Info}>Giá tiền: {selected[\"price\"]}</Typography>\r\n        </fieldset>\r\n    )\r\n}\r\n\r\nService.propTypes={\r\n    bookInfo: PropTypes.object,\r\n    setInfo: PropTypes.func,\r\n}\r\nexport default Service\r\n","C:\\reactjs\\munniehomespa-project\\src\\pages\\Booking\\Time\\Time.js",[],"C:\\reactjs\\munniehomespa-project\\src\\pages\\Booking\\Staff\\Staff.js",["366"],"import React, {useEffect, useState, useRef} from 'react'\r\nimport useStyles from \"../styles.js\"\r\nimport Search from '../../../components/Search/Search';\r\nimport {Typography} from '@material-ui/core'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {getStaff} from '../../../actions/staff';\r\nimport PropTypes from 'prop-types';\r\n//The component that accept staff information for the booking\r\n\r\nconst Staff = (props) => {\r\n    const classes = useStyles();\r\n    // const [data, setData] = useState(null);\r\n    const [search, setSearch] = useState('');\r\n    const [display, setDisplay] = useState(false);\r\n    const [selected, setSelected] = useState({\r\n        name: ''\r\n    })\r\n    const wrapperRef = useRef(null);\r\n    const staffList = useSelector(state=>state.staff.list);\r\n    const staffLoading = useSelector(state=>state.staff.loading);\r\n    const staffError = useSelector(state=>state.staff.error);\r\n    const dispatch = useDispatch();\r\n    const [config] = useState({\r\n        name:{\r\n            title:\"Staff Name\",\r\n            name:\"name\",\r\n            type:\"text\"\r\n        },\r\n    })\r\n\r\n    useEffect(()=>{\r\n        if(Object.keys(staffList).length === 0){\r\n            dispatch(getStaff())\r\n        }\r\n        document.addEventListener(\"mousedown\", handlerClickHandler)\r\n        return()=>{\r\n            document.removeEventListener(\"mousedown\", handlerClickHandler);\r\n        }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    },[])\r\n        \r\n    useEffect(()=>{\r\n        if(props.bookInfo['staffId'] !== ''){\r\n            setSearch(props.bookInfo['staffName']);\r\n            setSelected(\r\n                {\r\n                    name: props.bookInfo['staffName'], \r\n                })\r\n        }\r\n    },[props.bookInfo])\r\n    const handlerClickHandler= (event)=>{\r\n        const {current: wrap}= wrapperRef;\r\n        if(wrap && !wrap.contains(event.target)){\r\n            setDisplay(false)\r\n        }\r\n    }\r\n\r\n    let tableArray = [];\r\n        if(!staffLoading){\r\n            for(let el in staffList){\r\n                let content={};\r\n                for(let key in config){\r\n                    content[config[key][\"name\"]]= staffList[el][config[key][\"name\"]]\r\n                }\r\n                tableArray.push({\r\n                    id: el,\r\n                    data: content\r\n                })\r\n            }\r\n        }\r\n    const suggestSelectHandler =(id,name)=>{\r\n        setSearch(name);\r\n        setDisplay(!display);\r\n        setSelected({name: name});\r\n        props.setInfo({\r\n            ...props.bookInfo,\r\n            staffId:id,\r\n            staffName:name\r\n        })\r\n    }\r\n    const onChangeSearchHandler = (e)=>{\r\n        setSearch(e.target.value);\r\n        if(!e.target.value){\r\n            setSelected({name: '', phone: ''})\r\n            props.setInfo({\r\n                ...props.bookInfo,\r\n                staffId: '',\r\n                staffName: '',\r\n        })\r\n        }\r\n    }\r\n    return (\r\n        <fieldset ref = {wrapperRef}>\r\n            <legend>Thông tin nhân viên</legend>\r\n            <div className={classes.Search}>\r\n                <Search valued = {search}\r\n                placeholder =\"Nhập tên nhân viên\"\r\n                onChanged={(e)=>onChangeSearchHandler(e)}\r\n                onClicked={()=>setDisplay(!display)}/>\r\n                {display && (\r\n                    <div className={classes.SuggestContainer}>\r\n                        {tableArray.filter(element=>{\r\n                            \r\n                            return element[\"data\"][\"name\"].toLowerCase().includes(search.toLowerCase())\r\n                        }).map(v=>{\r\n                            return <div className={classes.Suggest}\r\n                            key={v.id}\r\n                            onClick={()=>suggestSelectHandler(v[\"id\"],v[\"data\"][\"name\"])}>\r\n                                {v[\"data\"][\"name\"]}\r\n                            </div>\r\n                        })}\r\n                    </div>)}\r\n            </div>\r\n            <Typography variant=\"body1\" display=\"block\" className={classes.Info}>Tên nhân viên: {selected[\"name\"]}</Typography>\r\n        </fieldset>\r\n    )\r\n}\r\n\r\nStaff.propTypes={\r\n    bookInfo: PropTypes.object,\r\n    setInfo: PropTypes.func,\r\n}\r\nexport default Staff\r\n","C:\\reactjs\\munniehomespa-project\\src\\pages\\Admin\\Staff.js",["367"],"import React, {useState,useEffect, useRef} from 'react'\r\nimport AddForm from './addForm';\r\nimport Header from '../../components/AdminUI/Header'\r\nimport {staffConfig} from '../../Config/dataConfig';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\nimport DisplayTable from './displayTable';\r\nimport {staffTable} from '../../Config/tableConfig';\r\nimport Notifications from '../../components/UI/Notifications/Notifications'\r\nimport {Typography, Box} from '@material-ui/core'\r\nimport Button from '../../components/AdminUI/Button'\r\nimport useStyles from './styles.js';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {getStaff} from '../../actions/staff';\r\n\r\n//Staff page which allows admin to manage Staff Information\r\n\r\nconst Staff = ()=>{\r\n    const classes = useStyles();\r\n    const [config,setConfig] = useState(staffConfig);\r\n    const [status, setStatus] = useState(\"list\");\r\n    const [editItem, setEditItem]= useState(null);\r\n    const [currentID, setCurrentId] = useState(null)\r\n    const notificationRef = useRef();\r\n    const staffList = useSelector(state=>state.staff.list);\r\n    const staffLoading = useSelector(state=>state.staff.loading);\r\n    const staffError = useSelector(state=>state.staff.error);\r\n    const dispatch = useDispatch();\r\n    useEffect(()=>{\r\n        if(Object.keys(staffList).length === 0){\r\n            dispatch(getStaff())\r\n        }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n    useEffect(()=>{\r\n        setConfig(staffConfig);\r\n    }, [status])\r\n    const editHandler =(id)=>{\r\n        let newConfig = JSON.parse(JSON.stringify(config));\r\n\r\n        for(let key in newConfig){\r\n            newConfig[key][\"value\"] = staffList[id][key];\r\n        }\r\n        setEditItem(newConfig);\r\n        setCurrentId(id)\r\n        setStatus(\"edit\");\r\n        \r\n    }\r\n\r\n    let page = <Spinner/>;\r\n    if(status === \"list\" && !staffLoading){\r\n        page = <DisplayTable \r\n        type=\"staff\"\r\n        data={staffList} \r\n        config={staffTable}\r\n        setId = {editHandler}\r\n        notificationRef={notificationRef}/>\r\n    }\r\n    if(status === \"edit\"){\r\n        page = <AddForm formType = \"staff\"\r\n        config={editItem} \r\n        setCon={setEditItem}\r\n        currentID = {currentID}\r\n        cancel={setStatus}\r\n        title=\"Edit Type\"\r\n        notificationRef={notificationRef}/>\r\n    }\r\n    if(status === \"add\"){\r\n        page = <AddForm formType = \"staff\" \r\n        config={config} \r\n        setCon={setConfig}\r\n        cancel={setStatus}\r\n        title=\"Add New Staff\"\r\n        notificationRef={notificationRef}/>\r\n    }\r\n    return(\r\n        <div className={classes.Page}>\r\n            <Header/>\r\n            <Box className={classes.Display}>\r\n                <Box textAlign=\"center\">\r\n                    <Typography variant=\"h3\">\r\n                        Staff\r\n                    </Typography>\r\n                </Box>\r\n                <Button setStatus={setStatus} \r\n                status={status}\r\n                name='Staff'/>\r\n                {page}\r\n                <Notifications ref={notificationRef}/>\r\n            </Box>\r\n        </div>\r\n    )\r\n}\r\nexport default Staff","C:\\reactjs\\munniehomespa-project\\src\\pages\\Admin\\Type.js",["368"],"import React, {useState, useEffect, useRef} from 'react'\r\nimport AddForm from './addForm';\r\nimport Header from '../../components/AdminUI/Header'\r\nimport {typeConfig} from '../../Config/dataConfig';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\nimport DisplayTable from './displayTable';\r\nimport {typeTable} from '../../Config/tableConfig';\r\nimport Notifications from '../../components/UI/Notifications/Notifications'\r\nimport {Typography, Box} from '@material-ui/core'\r\nimport Button from '../../components/AdminUI/Button'\r\nimport useStyles from './styles.js'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {getType} from '../../actions/type';\r\n\r\n//Type page which allows admin to manage Type Information\r\n\r\nconst Type = ()=>{\r\n    const classes = useStyles();\r\n    const [config,setConfig] = useState(typeConfig);\r\n    const [status, setStatus] = useState(\"list\");\r\n    // const [data, setData] = useState(null);\r\n    const [editItem, setEditItem]= useState(null);\r\n    const [currentID, setCurrentId] = useState(null)\r\n    const notificationRef = useRef();\r\n    const typeList = useSelector(state=>state.type.list);\r\n    const typeLoading = useSelector(state=>state.type.loading);\r\n    const typeError = useSelector(state=>state.type.error);\r\n    const dispatch = useDispatch();\r\n    useEffect(()=>{\r\n        if(Object.keys(typeList).length === 0){\r\n            dispatch(getType())\r\n        }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n    useEffect(()=>{\r\n        setConfig(typeConfig);\r\n    }, [status])\r\n\r\n    const editHandler =(id)=>{\r\n        let newConfig = JSON.parse(JSON.stringify(config));\r\n        for(let key in newConfig){\r\n            newConfig[key][\"value\"] = typeList[id][key];\r\n        }\r\n        setEditItem(newConfig);\r\n        setCurrentId(id)\r\n        setStatus(\"edit\");\r\n    }\r\n    let page = <Spinner/>;\r\n    if(status === \"list\" && !typeLoading){\r\n        page = <DisplayTable \r\n        type=\"type\"\r\n        data={typeList} \r\n        config={typeTable}\r\n        setId = {editHandler}\r\n        notificationRef={notificationRef}/>\r\n    }\r\n    if(status === \"edit\"){\r\n        page = <AddForm formType = \"type\"\r\n        config={editItem} \r\n        setCon={setEditItem}\r\n        currentID = {currentID}\r\n        cancel={setStatus}\r\n        title=\"Edit Type\"\r\n        notificationRef={notificationRef}/>\r\n    }\r\n    if(status === \"add\"){\r\n        page = <AddForm formType = \"type\"\r\n        config={config} \r\n        setCon={setConfig}\r\n        cancel={setStatus}\r\n        title=\"Add New Type\"\r\n        notificationRef={notificationRef}/>\r\n    }\r\n    return(\r\n        <div className={classes.Page}>\r\n            <Header/>\r\n            <Box className={classes.Display}>\r\n                <Box textAlign=\"center\">\r\n                    <Typography variant=\"h3\">\r\n                        Type\r\n                    </Typography>\r\n                </Box>\r\n                <Button setStatus={setStatus} \r\n                status={status}\r\n                name='Type'/>\r\n                {page}\r\n                <Notifications ref={notificationRef}/>\r\n            </Box>\r\n        </div>\r\n    )\r\n}\r\nexport default Type","C:\\reactjs\\munniehomespa-project\\src\\pages\\Admin\\Service.js",["369","370"],"import React, {useState, useEffect, useRef} from 'react'\r\nimport AddForm from './addForm';\r\nimport Header from '../../components/AdminUI/Header'\r\nimport {serviceConfig} from '../../Config/dataConfig';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\nimport Notifications from '../../components/UI/Notifications/Notifications'\r\nimport DisplayTable from './displayTable';\r\nimport {serviceTable} from '../../Config/tableConfig';\r\nimport {Box, Typography} from '@material-ui/core'\r\nimport useStyles from './styles.js';\r\nimport Button from '../../components/AdminUI/Button';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {getService} from '../../actions/service';\r\nimport {getType} from '../../actions/type';\r\n\r\n//Service page which allows admin to manage Service Information\r\n\r\nconst Service = ()=>{\r\n    const classes = useStyles();\r\n    const serviceList = useSelector(state=>state.service.list);\r\n    const serviceLoading = useSelector(state=>state.service.loading);\r\n    const serviceError = useSelector(state=>state.service.error);\r\n    const typeList = useSelector(state=>state.type.list);\r\n    const typeLoading = useSelector(state=>state.type.loading);\r\n    const typeError = useSelector(state=>state.type.error);\r\n    const dispatch = useDispatch();\r\n    const [config,setConfig] = useState(serviceConfig);\r\n    const [status, setStatus] = useState(\"list\");\r\n    const [editItem, setEditItem]= useState(null);\r\n    const [currentID, setCurrentId] = useState(null);\r\n    const notificationRef = useRef();\r\n\r\n    useEffect(()=>{\r\n        if(Object.keys(serviceList).length === 0){\r\n            dispatch(getService());\r\n        }\r\n        if(Object.keys(typeList).length === 0){\r\n            dispatch(getType())\r\n        }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n    useEffect(()=>{\r\n        setConfig(serviceConfig);\r\n        if(status === 'add'){\r\n            addTypeData();\r\n        }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    },[status]);\r\n    const addTypeData = ()=>{\r\n        const typeArray = [];\r\n        for(let key in typeList){\r\n            typeArray.push({\r\n                value:typeList[key]['id'],\r\n                display:typeList[key]['id']\r\n            })\r\n        }\r\n        const newConfig = {...config};\r\n        for(let i in typeArray){\r\n            newConfig['type']['elementConfig']['options'][i]= typeArray[i];\r\n        }\r\n\r\n        setConfig(newConfig);\r\n    }\r\n    const editHandler = (id)=>{\r\n        addTypeData();\r\n        let newConfig = JSON.parse(JSON.stringify(config));\r\n        console.log(newConfig)\r\n        for(let key in newConfig){\r\n            newConfig[key][\"value\"] = serviceList[id][key];\r\n        }\r\n        setEditItem(newConfig);\r\n        setCurrentId(id)\r\n        setStatus(\"edit\");\r\n    }\r\n    let page = <Spinner/>;\r\n    if(status === \"list\" && !typeLoading && !serviceLoading){\r\n        page = <DisplayTable \r\n        type=\"service\"\r\n        data={serviceList} \r\n        config={serviceTable}\r\n        setId = {editHandler}\r\n        notificationRef={notificationRef}\r\n        />\r\n    }\r\n    if(status === \"edit\"){\r\n        page = <AddForm formType = \"service\"\r\n        config={editItem} \r\n        setCon={setEditItem}\r\n        currentID = {currentID}\r\n        cancel={setStatus}\r\n        title=\"Edit Service\"\r\n        notificationRef={notificationRef}\r\n        />\r\n    }\r\n    if(status === \"add\"){\r\n        page = <AddForm formType = \"service\" \r\n        config={config}\r\n        setCon={setConfig}\r\n        cancel={setStatus}\r\n        title=\"Add New Service\"\r\n        notificationRef={notificationRef}\r\n        />\r\n    }\r\n    return(\r\n        <div className={classes.Page}>\r\n            <Header/>\r\n            <Box className={classes.Display}>\r\n                <Box textAlign=\"center\">\r\n                    <Typography variant=\"h3\">\r\n                        Service\r\n                    </Typography>\r\n                </Box>\r\n                <Button setStatus={setStatus} \r\n                status={status} \r\n                name='Service'/>\r\n                {page}\r\n                <Notifications ref={notificationRef}/>\r\n            </Box>\r\n        </div>\r\n    )\r\n}\r\nexport default Service","C:\\reactjs\\munniehomespa-project\\src\\pages\\Admin\\Voucher.js",["371"],"import React, {useState, useEffect,useRef} from 'react'\r\nimport AddForm from './addForm';\r\nimport Header from '../../components/AdminUI/Header'\r\nimport {voucherConfig} from '../../Config/dataConfig';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\nimport DisplayTable from './displayTable';\r\nimport {voucherTable} from '../../Config/tableConfig';\r\nimport Notifications from '../../components/UI/Notifications/Notifications'\r\nimport {Typography, Box} from '@material-ui/core'\r\nimport Button from '../../components/AdminUI/Button'\r\nimport useStyles from './styles.js'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {getVoucher} from '../../actions/voucher';\r\n\r\n//Voucher page which allows admin to manage Voucher Information\r\n\r\nconst Voucher = ()=>{\r\n    const classes = useStyles();\r\n    const [config,setConfig] = useState(voucherConfig);\r\n    const [status, setStatus] = useState(\"list\");\r\n    const [editItem, setEditItem]= useState(null);\r\n    const [currentID, setCurrentId] = useState(null)\r\n    const notificationRef = useRef();\r\n    const voucherList = useSelector(state=>state.voucher.list);\r\n    const voucherLoading = useSelector(state=>state.voucher.loading);\r\n    const voucherError = useSelector(state=>state.voucher.error);\r\n    const dispatch = useDispatch();\r\n    useEffect(()=>{\r\n        if(Object.keys(voucherList).length === 0){\r\n            dispatch(getVoucher())\r\n        }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n    useEffect(()=>{\r\n        setConfig(voucherConfig);\r\n    }, [status])\r\n\r\n    const editHandler =(id)=>{\r\n        let newConfig = JSON.parse(JSON.stringify(config));\r\n        for(let key in newConfig){\r\n            newConfig[key][\"value\"] = voucherList[id][key];\r\n        }\r\n        setEditItem(newConfig);\r\n        setCurrentId(id)\r\n        setStatus(\"edit\");\r\n    }\r\n\r\n    let page = <Spinner/>;\r\n    if(status === \"list\" && !voucherLoading){\r\n        page = <DisplayTable \r\n        data={voucherList} \r\n        config={voucherTable} \r\n        type=\"voucher\"\r\n        setId = {editHandler}\r\n        notificationRef={notificationRef}/>\r\n    }\r\n    if(status === \"edit\"){\r\n        page = <AddForm formType = \"voucher\"\r\n        config={editItem} \r\n        setCon={setEditItem}\r\n        currentID = {currentID}\r\n        cancel={setStatus}\r\n        title=\"Add New Voucher\"\r\n        notificationRef={notificationRef}/>\r\n    }\r\n    if(status === \"add\"){\r\n        page = <AddForm formType = \"voucher\" \r\n        config={config} \r\n        setCon={setConfig}\r\n        cancel={setStatus}\r\n        title=\"Add New Voucher\"\r\n        notificationRef={notificationRef}/>\r\n    }\r\n    return(\r\n        <div className={classes.Page}>\r\n            <Header/>\r\n            <Box className={classes.Display}>\r\n                <Box textAlign=\"center\">\r\n                    <Typography variant=\"h3\">\r\n                        Voucher\r\n                    </Typography>\r\n                </Box>\r\n                <Button setStatus={setStatus} \r\n                status={status}\r\n                name='Voucher'/>\r\n                {page}\r\n                <Notifications ref={notificationRef}/>\r\n            </Box>\r\n        </div>\r\n    )\r\n}\r\nexport default Voucher","C:\\reactjs\\munniehomespa-project\\src\\pages\\Admin\\Customer.js",["372"],"import React, {useState, useEffect, useRef} from 'react'\r\nimport AddForm from './addForm';\r\nimport Header from '../../components/AdminUI/Header'\r\nimport {customerConfig} from '../../Config/dataConfig';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\nimport DisplayTable from './displayTable';\r\nimport {customerTable} from '../../Config/tableConfig';\r\nimport Notifications from '../../components/UI/Notifications/Notifications'\r\nimport { Box, Typography} from '@material-ui/core'\r\nimport useStyles from './styles.js'\r\nimport Button from '../../components/AdminUI/Button'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {getCustomer} from '../../actions/customer';\r\n\r\n//Customer Page where admin manages Customer information\r\n\r\nconst Customer = ()=>{\r\n    const classes = useStyles();\r\n    const [config,setConfig] = useState(customerConfig);\r\n    const [status, setStatus] = useState(\"list\");\r\n    const [editItem, setEditItem]= useState(null);\r\n    const [currentID, setCurrentId] = useState(null)\r\n    const notificationRef = useRef();\r\n    const customerList = useSelector(state=>state.customer.list);\r\n    const customerLoading = useSelector(state=>state.customer.loading);\r\n    const customerError = useSelector(state=>state.customer.error);\r\n    const dispatch = useDispatch();\r\n    useEffect(()=>{\r\n        if(Object.keys(customerList).length === 0){\r\n            dispatch(getCustomer())\r\n        }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n    useEffect(()=>{\r\n        setConfig(customerConfig);\r\n    }, [status])\r\n\r\n    const editHandler =(id)=>{\r\n        let newConfig = JSON.parse(JSON.stringify(config));\r\n        for(let key in newConfig){\r\n            newConfig[key][\"value\"] = customerList[id][key];\r\n        }\r\n        setEditItem(newConfig);\r\n        setCurrentId(id)\r\n        setStatus(\"edit\");\r\n    }\r\n\r\n    let page = <Spinner/>;\r\n    if(status === \"list\" && !customerLoading){\r\n        page = <DisplayTable \r\n        data={customerList} \r\n        config ={customerTable} \r\n        type=\"customer\"\r\n        setId = {editHandler}\r\n        notificationRef={notificationRef}/>\r\n    }\r\n    if(status === \"edit\"){\r\n        page = <AddForm formType = \"customer\"\r\n        config={editItem} \r\n        setCon={setEditItem}\r\n        currentID = {currentID}\r\n        cancel={setStatus}\r\n        title=\"Edit Customer\"\r\n        notificationRef={notificationRef}/>\r\n    }\r\n    if(status === \"add\"){\r\n        page = <AddForm formType = \"customer\"\r\n        config={config} \r\n        setCon={setConfig}\r\n        cancel={setStatus}\r\n        title=\"Add New Customer\"\r\n        notificationRef={notificationRef}/>\r\n    }\r\n    return(\r\n        <div className={classes.Page}>\r\n            <Header/>\r\n            <Box className={classes.Display}>\r\n                <Box textAlign=\"center\">\r\n                        <Typography variant=\"h3\">\r\n                            Customer\r\n                        </Typography>\r\n                </Box>\r\n                <Button setStatus={setStatus} \r\n                status={status}\r\n                name='Customer'/>\r\n                {page}\r\n                <Notifications ref={notificationRef}/>\r\n            </Box>\r\n        </div>\r\n    )\r\n}\r\nexport default Customer;","C:\\reactjs\\munniehomespa-project\\src\\pages\\Admin\\addForm.js",[],"C:\\reactjs\\munniehomespa-project\\src\\pages\\Admin\\displayTable.js",[],"C:\\reactjs\\munniehomespa-project\\src\\pages\\Admin\\styles.js",[],"C:\\reactjs\\munniehomespa-project\\src\\pages\\Auth\\Login.js",["373","374"],"C:\\reactjs\\munniehomespa-project\\src\\pages\\ShowBook\\ShowBook.js",["375","376"],"import React, {useState, useEffect, useRef} from 'react'\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport {Table, TableBody, TableCell, TableContainer, \r\n    TableHead, TableRow, Paper, Box, Button} from '@material-ui/core';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\r\nimport ShowInfo from './ShowInfo';\r\nimport Spinner from '../../components/UI/Spinner/Spinner'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {getStaff} from '../../actions/staff';\r\nimport {getBook} from '../../actions/book';\r\nimport SelectStaff from './SelectStaff';\r\nimport Booking from '../Booking/Booking';\r\nimport Header from '../../components/AdminUI/Header'\r\nimport Aux from '../../hoc/Auxulliary';\r\nimport useStyles from './styles.js';\r\nimport Notifications from '../../components/UI/Notifications/Notifications'\r\n\r\n//Dashboard display list of booking to admin\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n    root:{\r\n        '&:first-of-type':{\r\n            width:'15%',\r\n        },\r\n        borderLeft: '1px solid #ebcdb7',\r\n        borderRight: '1px solid #ebcdb7',\r\n        verticalAlign: 'top',\r\n    },\r\n    head: {\r\n        backgroundColor: '#dbb89a',\r\n        color: 'black',\r\n    },\r\n    body: {\r\n        fontSize: 14,\r\n    },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\nroot: {\r\n    '&:nth-of-type(odd)': {\r\n    backgroundColor: '#fff6f3',\r\n    },\r\n    \r\n},\r\n}))(TableRow);\r\n\r\nconst ShowBook = () => {\r\n    const classes= useStyles();\r\n    const [showForm, setShowForm] = useState(false);\r\n    const [selectedDate, setSelectedDate] = useState(new Date());\r\n    const notificationRef = useRef();\r\n    const [numberOfColumns, setNumberOfColumns] = useState(3);\r\n    const [staff, setStaff] = useState('All');\r\n    const staffList = useSelector(state=>state.staff.list);\r\n    const staffLoading = useSelector(state=>state.staff.loading);\r\n    const staffError = useSelector(state=>state.staff.error);\r\n    const bookList = useSelector(state=>state.book.list);\r\n    const bookLoading = useSelector(state=>state.book.loading);\r\n    const bookError = useSelector(state=>state.book.error);\r\n\r\n    const [chosenBook, setChosenBook] = useState({\r\n        customerId: '',\r\n        customerName: '',\r\n        customerPhone: '',\r\n        customerEmail: '',\r\n        serviceId:'',\r\n        serviceName:'',\r\n        duration:'',\r\n        end:'',\r\n        price:'',\r\n        start: '',\r\n        staffId: '',\r\n        staffName:'',\r\n    });\r\n    const [chosenId, setChosenId] = useState('');\r\n    const [edit, setEdit] = useState(false)\r\n    const dispatch = useDispatch();\r\n    const [config, setConfig] = useState(\r\n        {\r\n        elementType: 'select',\r\n        elementConfig:{\r\n            options:[]\r\n        },\r\n        value: '',\r\n        validation:{\r\n            required: true,\r\n        },\r\n        valid: false,\r\n        touched:false\r\n    })\r\n    \r\n    useEffect(()=>{\r\n        if(Object.keys(staffList).length === 0){\r\n            dispatch(getStaff())\r\n        }\r\n        if(Object.keys(bookList).length === 0){\r\n            dispatch(getBook())\r\n        }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    },[])\r\n    useEffect(()=>{\r\n        if(Object.keys(staffList).length > 0){\r\n            const staffArray =[];\r\n            for(let key in staffList){\r\n                staffArray.push({\r\n                    value:staffList[key]['name'],\r\n                    display:staffList[key]['name']\r\n                })\r\n            }\r\n            staffArray.push({\r\n                value: 'All',\r\n                display: 'All',\r\n            })\r\n            const newData = {...config};\r\n            newData['value'] = staff;\r\n            for(let i in staffArray){\r\n                newData['elementConfig']['options'][i] = staffArray[i];\r\n            }\r\n            setConfig(newData);\r\n        }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    },[staff,staffList])\r\n\r\n\r\n    useEffect(()=>{\r\n        (staff === 'All')? setNumberOfColumns(Object.keys(staffList).length): setNumberOfColumns(5)\r\n    },[staff,staffList])\r\n\r\n    const formatNumberHandler = (number)=>{\r\n        return number.toLocaleString('en-US',{\r\n            minimumIntegerDigits: 2,\r\n            useGrouping: false\r\n        })\r\n    }\r\n    const getDay = (number)=>{\r\n        const dayArray = ['Chủ nhật', 'Thứ Hai', 'Thứ Ba', 'Thứ Tư', 'Thứ Năm', 'Thứ Sáu', 'Thứ Bảy']\r\n        return( number <7? dayArray[number]: dayArray[number - 7])\r\n    }\r\n    let header = [];\r\n    if(staff === 'All'){\r\n        for(let key in staffList){\r\n            header.push(\r\n                <StyledTableCell key={key}>{staffList[key]['name']}</StyledTableCell>\r\n            )\r\n        }\r\n    }else{\r\n        for(let a = 0; a< numberOfColumns; a++){\r\n            const date = new Date(selectedDate);\r\n            date.setDate(date.getDate() + a);\r\n            header.push(\r\n                    <StyledTableCell key={date}>{getDay(date.getDay())}</StyledTableCell>\r\n            )\r\n        }\r\n    }\r\n    const checkBook =(date,staffName)=>{\r\n        let checkedStaff = staff\r\n        if(staffName){\r\n            checkedStaff = staffName\r\n        }\r\n        for(let key in bookList){\r\n            if(bookList[key]['staffName'] === checkedStaff){\r\n                let start = new Date(bookList[key]['start']);\r\n                let end = new Date(bookList[key]['end'])\r\n                if(start <= date && date<= end){\r\n                    let dif = (date.getTime() - start.getTime())/60000\r\n                    let merge = Math.ceil(parseInt(bookList[key]['duration'])/15)\r\n                    if(dif < 15){\r\n                        return [bookList[key], true,merge, key]\r\n                    }\r\n                    else{\r\n                        return [true, false]\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    let rows = [];\r\n    for(let i = 0;i < 53; i ++){\r\n        const date = new Date(selectedDate);\r\n        date.setHours(7,0,0);\r\n        date.setMinutes(date.getMinutes() + i*15);\r\n        let column = [];\r\n        if(staff === 'All'){\r\n            for(let b in staffList){\r\n                let InfoList = checkBook(date,staffList[b]['name']);\r\n                if(InfoList){\r\n                    if(InfoList[1]){\r\n                        column.push(\r\n                            <StyledTableCell \r\n                            className={classes.Booked} \r\n                            key={date+b}\r\n                            rowSpan={InfoList[2]}\r\n                            onClick={()=>{setChosenBook(InfoList[0]); setChosenId(InfoList[3])}}>\r\n                                {InfoList[0]['customerName']}\r\n                                <br/>\r\n                                {InfoList[0]['serviceName']}\r\n                            </StyledTableCell>\r\n                        )\r\n                    }\r\n                }\r\n                else{\r\n                    column.push(\r\n                        <StyledTableCell key={date +b}></StyledTableCell>\r\n                    )\r\n                }\r\n            }\r\n        }else{\r\n            for(let a = 0; a < numberOfColumns; a++){\r\n                let date2 = new Date(date);\r\n                date2.setDate(date2.getDate() + a)\r\n                let InfoList = checkBook(date2);\r\n                if(InfoList){\r\n                    if(InfoList[1]){\r\n                        column.push(\r\n                            <StyledTableCell \r\n                            className={classes.Booked} \r\n                            key={date2}\r\n                            rowSpan={InfoList[2]}\r\n                            onClick={()=>{setChosenBook(InfoList[0]); setChosenId(InfoList[3])}}>\r\n                                {InfoList[0]['customerName']}\r\n                                <br/>\r\n                                {InfoList[0]['serviceName']}\r\n                            </StyledTableCell>\r\n                        )\r\n                    }\r\n                }\r\n                else{\r\n                    column.push(\r\n                        <StyledTableCell key={date2}></StyledTableCell>\r\n                    )\r\n                }\r\n            }\r\n        }\r\n        rows.push(<StyledTableRow key={i}>\r\n                    <StyledTableCell>{formatNumberHandler(date.getHours())}:{formatNumberHandler(date.getMinutes())}</StyledTableCell>\r\n                    {column}\r\n                </StyledTableRow>);\r\n    }\r\n    const previousDateHandler =()=>{\r\n        staff === 'All'?\r\n        setSelectedDate(new Date(selectedDate.setDate(selectedDate.getDate() -1))):\r\n        setSelectedDate(new Date(selectedDate.setDate(selectedDate.getDate() -5)));\r\n    }\r\n    const nextDateHandler=()=>{\r\n        staff === 'All'?\r\n        setSelectedDate(new Date(selectedDate.setDate(selectedDate.getDate() +1))):\r\n        setSelectedDate(new Date(selectedDate.setDate(selectedDate.getDate() +5)));\r\n    }\r\n    const selectCurrentHandler=()=>{\r\n        setSelectedDate(new Date())\r\n    }\r\n    let showBook= null;\r\n        showBook = (\r\n            <Box className={classes.ShowBook}>\r\n                <Button variant=\"outlined\" \r\n                    startIcon={<AddCircleIcon/>}\r\n                    className={classes.Button}\r\n                    onClick={()=>{setShowForm(true);setEdit(false)}}>Tạo lịch hẹn</Button>\r\n                <SelectStaff setStaff={setStaff} staff={staff} config={config}/>\r\n                <TableContainer component={Paper} className={classes.Table}>\r\n                    <Box className={classes.selectDate}>\r\n                        <Button\r\n                            startIcon={<ArrowBackIcon/>}\r\n                            onClick={previousDateHandler}\r\n                        />\r\n                        <Button\r\n                            onClick={selectCurrentHandler}>\r\n                            {selectedDate.toString()}\r\n                        </Button>\r\n                        <Button\r\n                            startIcon={<ArrowForwardIcon/>}\r\n                            onClick={nextDateHandler}\r\n                        />\r\n                    </Box>\r\n                    <Table>\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <StyledTableCell>{staff}</StyledTableCell>\r\n                                {header}\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {rows}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                <ShowInfo \r\n                info={chosenBook} \r\n                id={chosenId}\r\n                notification={notificationRef}\r\n                setChosenBook = {setChosenBook}\r\n                setShowForm = {setShowForm}\r\n                setEdit={setEdit}/>\r\n            </Box>\r\n        )\r\n    if(staffLoading || bookLoading){\r\n        showBook=<Spinner/>\r\n    }\r\n    return (\r\n        <Aux>\r\n            <Header/>\r\n            <Box className={classes.Display}>\r\n                {!showForm && showBook}\r\n                {showForm && !edit &&\r\n                <Booking \r\n                setShowForm={setShowForm} \r\n                notification={notificationRef}\r\n                />}\r\n                {showForm && edit &&\r\n                <Booking \r\n                setShowForm={setShowForm} \r\n                notification={notificationRef}\r\n                currentId = {chosenId}\r\n                chosenBook = {chosenBook}\r\n                />}\r\n            </Box>\r\n            <Notifications ref={notificationRef}/>\r\n        </Aux>\r\n    )\r\n}\r\n\r\nexport default ShowBook;\r\n","C:\\reactjs\\munniehomespa-project\\src\\store.js",[],"C:\\reactjs\\munniehomespa-project\\src\\reducers\\index.js",[],"C:\\reactjs\\munniehomespa-project\\src\\reducers\\service.js",[],"C:\\reactjs\\munniehomespa-project\\src\\actions\\service.js",[],"C:\\reactjs\\munniehomespa-project\\src\\constants\\service.js",[],"C:\\reactjs\\munniehomespa-project\\src\\reducers\\voucher.js",[],"C:\\reactjs\\munniehomespa-project\\src\\constants\\voucher.js",[],"C:\\reactjs\\munniehomespa-project\\src\\actions\\voucher.js",[],"C:\\reactjs\\munniehomespa-project\\src\\reducers\\type.js",[],"C:\\reactjs\\munniehomespa-project\\src\\constants\\type.js",[],"C:\\reactjs\\munniehomespa-project\\src\\actions\\type.js",[],"C:\\reactjs\\munniehomespa-project\\src\\api\\api.js",[],"C:\\reactjs\\munniehomespa-project\\src\\reducers\\customer.js",[],"C:\\reactjs\\munniehomespa-project\\src\\constants\\customer.js",[],"C:\\reactjs\\munniehomespa-project\\src\\actions\\customer.js",[],"C:\\reactjs\\munniehomespa-project\\src\\reducers\\staff.js",[],"C:\\reactjs\\munniehomespa-project\\src\\actions\\staff.js",[],"C:\\reactjs\\munniehomespa-project\\src\\constants\\staff.js",[],"C:\\reactjs\\munniehomespa-project\\src\\reducers\\book.js",[],"C:\\reactjs\\munniehomespa-project\\src\\constants\\book.js",[],"C:\\reactjs\\munniehomespa-project\\src\\actions\\book.js",[],"C:\\reactjs\\munniehomespa-project\\src\\pages\\ShowBook\\SelectStaff.js",[],"C:\\reactjs\\munniehomespa-project\\src\\pages\\ShowBook\\ShowInfo.js",[],"C:\\reactjs\\munniehomespa-project\\src\\pages\\ShowBook\\styles.js",[],"C:\\reactjs\\munniehomespa-project\\src\\components\\UI\\ConfirmMessage\\ConfirmMessage.js",[],"C:\\reactjs\\munniehomespa-project\\src\\actions\\auth.js",[],"C:\\reactjs\\munniehomespa-project\\src\\constants\\auth.js",[],"C:\\reactjs\\munniehomespa-project\\src\\reducers\\auth.js",[],"C:\\reactjs\\munniehomespa-project\\src\\components\\AdminUI\\Header.js",[],"C:\\reactjs\\munniehomespa-project\\src\\components\\AdminUI\\Button.js",[],"C:\\reactjs\\munniehomespa-project\\src\\Config\\dataConfig.js",[],"C:\\reactjs\\munniehomespa-project\\src\\Config\\tableConfig.js",[],"C:\\reactjs\\munniehomespa-project\\src\\Config\\firebaseConfig.js",[],"C:\\reactjs\\munniehomespa-project\\src\\components\\UI\\Footer\\Footer.js",[],"C:\\reactjs\\munniehomespa-project\\src\\components\\UI\\Footer\\FooterColumn.js",[],"C:\\reactjs\\munniehomespa-project\\src\\components\\UI\\Header\\Header.js",[],"C:\\reactjs\\munniehomespa-project\\src\\components\\UI\\Header\\Navigation.js",[],"C:\\reactjs\\munniehomespa-project\\src\\components\\UI\\Header\\SideDrawer\\SideDrawer.js",[],"C:\\reactjs\\munniehomespa-project\\src\\components\\UI\\Header\\NavigationItem.js",[],"C:\\reactjs\\munniehomespa-project\\src\\pages\\Contact\\Info.js",[],"C:\\reactjs\\munniehomespa-project\\src\\pages\\Index\\About\\Content.js",[],"C:\\reactjs\\munniehomespa-project\\src\\pages\\Index\\Services\\Service.js",[],"C:\\reactjs\\munniehomespa-project\\src\\pages\\Index\\Voucher\\Slider.js",[],"C:\\reactjs\\munniehomespa-project\\src\\pages\\Index\\Welcome\\Book.js",[],"C:\\reactjs\\munniehomespa-project\\src\\pages\\Service\\ServiceItem.js",[],"C:\\reactjs\\munniehomespa-project\\src\\pages\\Service\\Type.js",[],"C:\\reactjs\\munniehomespa-project\\src\\components\\Input\\Input.js",[],"C:\\reactjs\\munniehomespa-project\\src\\components\\Input\\styles.js",[],{"ruleId":"377","replacedBy":"378"},{"ruleId":"379","replacedBy":"380"},{"ruleId":"381","severity":1,"message":"382","line":18,"column":11,"nodeType":"383","messageId":"384","endLine":18,"endColumn":23},{"ruleId":"381","severity":1,"message":"385","line":21,"column":11,"nodeType":"383","messageId":"384","endLine":21,"endColumn":20},{"ruleId":"377","replacedBy":"386"},{"ruleId":"379","replacedBy":"387"},{"ruleId":"381","severity":1,"message":"388","line":16,"column":11,"nodeType":"383","messageId":"384","endLine":16,"endColumn":24},{"ruleId":"381","severity":1,"message":"382","line":18,"column":11,"nodeType":"383","messageId":"384","endLine":18,"endColumn":23},{"ruleId":"381","severity":1,"message":"389","line":21,"column":11,"nodeType":"383","messageId":"384","endLine":21,"endColumn":21},{"ruleId":"381","severity":1,"message":"389","line":26,"column":11,"nodeType":"383","messageId":"384","endLine":26,"endColumn":21},{"ruleId":"381","severity":1,"message":"385","line":27,"column":11,"nodeType":"383","messageId":"384","endLine":27,"endColumn":20},{"ruleId":"381","severity":1,"message":"382","line":22,"column":11,"nodeType":"383","messageId":"384","endLine":22,"endColumn":23},{"ruleId":"381","severity":1,"message":"385","line":25,"column":11,"nodeType":"383","messageId":"384","endLine":25,"endColumn":20},{"ruleId":"381","severity":1,"message":"390","line":26,"column":11,"nodeType":"383","messageId":"384","endLine":26,"endColumn":23},{"ruleId":"381","severity":1,"message":"388","line":26,"column":11,"nodeType":"383","messageId":"384","endLine":26,"endColumn":24},{"ruleId":"381","severity":1,"message":"391","line":34,"column":11,"nodeType":"383","messageId":"384","endLine":34,"endColumn":22},{"ruleId":"381","severity":1,"message":"392","line":35,"column":11,"nodeType":"383","messageId":"384","endLine":35,"endColumn":20},{"ruleId":"381","severity":1,"message":"389","line":58,"column":11,"nodeType":"383","messageId":"384","endLine":58,"endColumn":21},{"ruleId":"381","severity":1,"message":"393","line":61,"column":11,"nodeType":"383","messageId":"384","endLine":61,"endColumn":20},"no-native-reassign",["394"],"no-negated-in-lhs",["395"],"no-unused-vars","'serviceError' is assigned a value but never used.","Identifier","unusedVar","'typeError' is assigned a value but never used.",["394"],["395"],"'customerError' is assigned a value but never used.","'staffError' is assigned a value but never used.","'voucherError' is assigned a value but never used.","'userLoading' is assigned a value but never used.","'userError' is assigned a value but never used.","'bookError' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]