[{"C:\\reactjs\\munniehomespa-project\\src\\index.js":"1","C:\\reactjs\\munniehomespa-project\\src\\reportWebVitals.js":"2","C:\\reactjs\\munniehomespa-project\\src\\App.js":"3","C:\\reactjs\\munniehomespa-project\\src\\components\\Header\\Header.js":"4","C:\\reactjs\\munniehomespa-project\\src\\components\\Footer\\Footer.js":"5","C:\\reactjs\\munniehomespa-project\\src\\components\\Header\\Navigation\\Navigation.js":"6","C:\\reactjs\\munniehomespa-project\\src\\components\\Header\\Navigation\\NavigationItem\\NavigationItem.js":"7","C:\\reactjs\\munniehomespa-project\\src\\components\\UI\\Layout\\Layout.js":"8","C:\\reactjs\\munniehomespa-project\\src\\hoc\\Auxulliary.js":"9","C:\\reactjs\\munniehomespa-project\\src\\components\\Header\\Navigation\\SideDrawer\\SideDrawer.js":"10","C:\\reactjs\\munniehomespa-project\\src\\components\\UI\\Backdrop\\Backdrop.js":"11","C:\\reactjs\\munniehomespa-project\\src\\components\\Footer\\FooterColumn\\FooterColumn.js":"12","C:\\reactjs\\munniehomespa-project\\src\\components\\UI\\Button\\Button.js":"13","C:\\reactjs\\munniehomespa-project\\src\\pages\\Index\\Index.js":"14","C:\\reactjs\\munniehomespa-project\\src\\pages\\Index\\About\\About.js":"15","C:\\reactjs\\munniehomespa-project\\src\\pages\\Index\\Welcome\\Welcome.js":"16","C:\\reactjs\\munniehomespa-project\\src\\pages\\Index\\About\\Content\\Content.js":"17","C:\\reactjs\\munniehomespa-project\\src\\pages\\Index\\Welcome\\Book\\Book.js":"18","C:\\reactjs\\munniehomespa-project\\src\\pages\\Error\\Error.js":"19","C:\\reactjs\\munniehomespa-project\\src\\pages\\Service\\Service.js":"20","C:\\reactjs\\munniehomespa-project\\src\\pages\\Index\\Services\\Services.js":"21","C:\\reactjs\\munniehomespa-project\\src\\pages\\Index\\Services\\Service\\Service.js":"22","C:\\reactjs\\munniehomespa-project\\src\\pages\\Index\\Voucher\\Voucher.js":"23","C:\\reactjs\\munniehomespa-project\\src\\pages\\Index\\Voucher\\Slider\\Slider.js":"24","C:\\reactjs\\munniehomespa-project\\src\\pages\\Service\\Type\\Type.js":"25","C:\\reactjs\\munniehomespa-project\\src\\pages\\Service\\ServiceItem\\ServiceItem.js":"26","C:\\reactjs\\munniehomespa-project\\src\\axios-order.js":"27","C:\\reactjs\\munniehomespa-project\\src\\components\\UI\\Spinner\\Spinner.js":"28","C:\\reactjs\\munniehomespa-project\\src\\components\\UI\\Social\\Social.js":"29","C:\\reactjs\\munniehomespa-project\\src\\components\\Firebase\\firebaseConfig.js":"30","C:\\reactjs\\munniehomespa-project\\src\\pages\\Contact\\Contact.js":"31","C:\\reactjs\\munniehomespa-project\\src\\pages\\Contact\\Info\\Info.js":"32","C:\\reactjs\\munniehomespa-project\\src\\pages\\Auth\\Auth.js":"33","C:\\reactjs\\munniehomespa-project\\src\\components\\UI\\Input\\Input.js":"34","C:\\reactjs\\munniehomespa-project\\src\\pages\\InputHandler.js":"35","C:\\reactjs\\munniehomespa-project\\src\\pages\\Admin\\dataConfig.js":"36","C:\\reactjs\\munniehomespa-project\\src\\components\\Search\\Search.js":"37","C:\\reactjs\\munniehomespa-project\\src\\pages\\Admin\\tableConfig.js":"38","C:\\reactjs\\munniehomespa-project\\src\\components\\Pagination\\Pagination.js":"39","C:\\reactjs\\munniehomespa-project\\src\\components\\UI\\Notifications\\Notifications.js":"40","C:\\reactjs\\munniehomespa-project\\src\\components\\UI\\Input\\styles.js":"41","C:\\reactjs\\munniehomespa-project\\src\\pages\\Booking\\Booking.js":"42","C:\\reactjs\\munniehomespa-project\\src\\pages\\Booking\\styles.js":"43","C:\\reactjs\\munniehomespa-project\\src\\pages\\Booking\\Customer\\Customer.js":"44","C:\\reactjs\\munniehomespa-project\\src\\pages\\Booking\\Service\\Service.js":"45","C:\\reactjs\\munniehomespa-project\\src\\pages\\Booking\\Time\\Time.js":"46","C:\\reactjs\\munniehomespa-project\\src\\pages\\Booking\\Staff\\Staff.js":"47","C:\\reactjs\\munniehomespa-project\\src\\components\\AHeader\\Header.js":"48","C:\\reactjs\\munniehomespa-project\\src\\pages\\Admin\\Staff.js":"49","C:\\reactjs\\munniehomespa-project\\src\\pages\\Admin\\Type.js":"50","C:\\reactjs\\munniehomespa-project\\src\\pages\\Admin\\Service.js":"51","C:\\reactjs\\munniehomespa-project\\src\\pages\\Admin\\Voucher.js":"52","C:\\reactjs\\munniehomespa-project\\src\\pages\\Admin\\Customer.js":"53","C:\\reactjs\\munniehomespa-project\\src\\pages\\Admin\\addForm.js":"54","C:\\reactjs\\munniehomespa-project\\src\\pages\\Admin\\displayTable.js":"55","C:\\reactjs\\munniehomespa-project\\src\\pages\\Admin\\styles.js":"56","C:\\reactjs\\munniehomespa-project\\src\\pages\\Admin\\Button.js":"57","C:\\reactjs\\munniehomespa-project\\src\\pages\\Auth\\Login.js":"58","C:\\reactjs\\munniehomespa-project\\src\\pages\\ShowBook\\ShowBook.js":"59","C:\\reactjs\\munniehomespa-project\\src\\store.js":"60","C:\\reactjs\\munniehomespa-project\\src\\reducers\\index.js":"61","C:\\reactjs\\munniehomespa-project\\src\\reducers\\service.js":"62","C:\\reactjs\\munniehomespa-project\\src\\actions\\service.js":"63","C:\\reactjs\\munniehomespa-project\\src\\constants\\service.js":"64","C:\\reactjs\\munniehomespa-project\\src\\reducers\\voucher.js":"65","C:\\reactjs\\munniehomespa-project\\src\\constants\\voucher.js":"66","C:\\reactjs\\munniehomespa-project\\src\\actions\\voucher.js":"67","C:\\reactjs\\munniehomespa-project\\src\\reducers\\type.js":"68","C:\\reactjs\\munniehomespa-project\\src\\constants\\type.js":"69","C:\\reactjs\\munniehomespa-project\\src\\actions\\type.js":"70","C:\\reactjs\\munniehomespa-project\\src\\api\\api.js":"71","C:\\reactjs\\munniehomespa-project\\src\\reducers\\customer.js":"72","C:\\reactjs\\munniehomespa-project\\src\\constants\\customer.js":"73","C:\\reactjs\\munniehomespa-project\\src\\actions\\customer.js":"74","C:\\reactjs\\munniehomespa-project\\src\\reducers\\staff.js":"75","C:\\reactjs\\munniehomespa-project\\src\\actions\\staff.js":"76","C:\\reactjs\\munniehomespa-project\\src\\constants\\staff.js":"77","C:\\reactjs\\munniehomespa-project\\src\\reducers\\book.js":"78","C:\\reactjs\\munniehomespa-project\\src\\constants\\book.js":"79","C:\\reactjs\\munniehomespa-project\\src\\actions\\book.js":"80","C:\\reactjs\\munniehomespa-project\\src\\pages\\ShowBook\\SelectStaff.js":"81","C:\\reactjs\\munniehomespa-project\\src\\pages\\ShowBook\\ShowInfo.js":"82","C:\\reactjs\\munniehomespa-project\\src\\pages\\ShowBook\\styles.js":"83","C:\\reactjs\\munniehomespa-project\\src\\components\\UI\\ConfirmMessage\\ConfirmMessage.js":"84"},{"size":584,"mtime":1618566090244,"results":"85","hashOfConfig":"86"},{"size":375,"mtime":1610970252756,"results":"87","hashOfConfig":"86"},{"size":1832,"mtime":1618648338246,"results":"88","hashOfConfig":"86"},{"size":917,"mtime":1615895389762,"results":"89","hashOfConfig":"86"},{"size":1288,"mtime":1615391147343,"results":"90","hashOfConfig":"86"},{"size":747,"mtime":1615443156749,"results":"91","hashOfConfig":"86"},{"size":301,"mtime":1614526896165,"results":"92","hashOfConfig":"86"},{"size":494,"mtime":1616387135708,"results":"93","hashOfConfig":"86"},{"size":59,"mtime":1611056861317,"results":"94","hashOfConfig":"86"},{"size":921,"mtime":1611066279275,"results":"95","hashOfConfig":"86"},{"size":235,"mtime":1611064161727,"results":"96","hashOfConfig":"86"},{"size":283,"mtime":1611157376997,"results":"97","hashOfConfig":"86"},{"size":227,"mtime":1614738406102,"results":"98","hashOfConfig":"86"},{"size":923,"mtime":1617166422306,"results":"99","hashOfConfig":"86"},{"size":349,"mtime":1611657293742,"results":"100","hashOfConfig":"86"},{"size":609,"mtime":1612965718864,"results":"101","hashOfConfig":"86"},{"size":1101,"mtime":1611748744408,"results":"102","hashOfConfig":"86"},{"size":376,"mtime":1615391664311,"results":"103","hashOfConfig":"86"},{"size":172,"mtime":1612971586853,"results":"104","hashOfConfig":"86"},{"size":3922,"mtime":1618294832885,"results":"105","hashOfConfig":"86"},{"size":2117,"mtime":1618294776765,"results":"106","hashOfConfig":"86"},{"size":761,"mtime":1617899078795,"results":"107","hashOfConfig":"86"},{"size":336,"mtime":1613296806802,"results":"108","hashOfConfig":"86"},{"size":1706,"mtime":1618294803100,"results":"109","hashOfConfig":"86"},{"size":546,"mtime":1617902706519,"results":"110","hashOfConfig":"86"},{"size":2058,"mtime":1617902622226,"results":"111","hashOfConfig":"86"},{"size":154,"mtime":1614233705814,"results":"112","hashOfConfig":"86"},{"size":175,"mtime":1614256259747,"results":"113","hashOfConfig":"86"},{"size":663,"mtime":1615386399581,"results":"114","hashOfConfig":"86"},{"size":762,"mtime":1618041545145,"results":"115","hashOfConfig":"86"},{"size":2268,"mtime":1615386607286,"results":"116","hashOfConfig":"86"},{"size":292,"mtime":1614692524477,"results":"117","hashOfConfig":"86"},{"size":409,"mtime":1614826245829,"results":"118","hashOfConfig":"86"},{"size":3135,"mtime":1617639008133,"results":"119","hashOfConfig":"86"},{"size":1212,"mtime":1618769324616,"results":"120","hashOfConfig":"86"},{"size":12645,"mtime":1617638358033,"results":"121","hashOfConfig":"86"},{"size":675,"mtime":1617207306771,"results":"122","hashOfConfig":"86"},{"size":2377,"mtime":1617425245945,"results":"123","hashOfConfig":"86"},{"size":1193,"mtime":1617447378417,"results":"124","hashOfConfig":"86"},{"size":1111,"mtime":1617103947138,"results":"125","hashOfConfig":"86"},{"size":886,"mtime":1617638957730,"results":"126","hashOfConfig":"86"},{"size":3545,"mtime":1618761304779,"results":"127","hashOfConfig":"86"},{"size":958,"mtime":1617432379320,"results":"128","hashOfConfig":"86"},{"size":4982,"mtime":1618760193475,"results":"129","hashOfConfig":"86"},{"size":5062,"mtime":1618760516620,"results":"130","hashOfConfig":"86"},{"size":1103,"mtime":1618761256843,"results":"131","hashOfConfig":"86"},{"size":4096,"mtime":1618760522080,"results":"132","hashOfConfig":"86"},{"size":2903,"mtime":1617427153347,"results":"133","hashOfConfig":"86"},{"size":3122,"mtime":1618293637526,"results":"134","hashOfConfig":"86"},{"size":3113,"mtime":1618294361357,"results":"135","hashOfConfig":"86"},{"size":4226,"mtime":1618771525019,"results":"136","hashOfConfig":"86"},{"size":3109,"mtime":1618294463906,"results":"137","hashOfConfig":"86"},{"size":3195,"mtime":1618293798158,"results":"138","hashOfConfig":"86"},{"size":4194,"mtime":1618769325765,"results":"139","hashOfConfig":"86"},{"size":6780,"mtime":1618773639404,"results":"140","hashOfConfig":"86"},{"size":397,"mtime":1618319610439,"results":"141","hashOfConfig":"86"},{"size":1690,"mtime":1618126542078,"results":"142","hashOfConfig":"86"},{"size":3115,"mtime":1617962609983,"results":"143","hashOfConfig":"86"},{"size":10446,"mtime":1618759028829,"results":"144","hashOfConfig":"86"},{"size":327,"mtime":1618566146547,"results":"145","hashOfConfig":"86"},{"size":506,"mtime":1618248865857,"results":"146","hashOfConfig":"86"},{"size":2154,"mtime":1618200279708,"results":"147","hashOfConfig":"86"},{"size":2768,"mtime":1618297584938,"results":"148","hashOfConfig":"86"},{"size":718,"mtime":1618200108135,"results":"149","hashOfConfig":"86"},{"size":2153,"mtime":1618214857949,"results":"150","hashOfConfig":"86"},{"size":718,"mtime":1618214925822,"results":"151","hashOfConfig":"86"},{"size":2762,"mtime":1618298714543,"results":"152","hashOfConfig":"86"},{"size":2195,"mtime":1618771457506,"results":"153","hashOfConfig":"86"},{"size":691,"mtime":1618204162526,"results":"154","hashOfConfig":"86"},{"size":2822,"mtime":1618771476019,"results":"155","hashOfConfig":"86"},{"size":3687,"mtime":1618761152770,"results":"156","hashOfConfig":"86"},{"size":2179,"mtime":1618215846512,"results":"157","hashOfConfig":"86"},{"size":742,"mtime":1618215721933,"results":"158","hashOfConfig":"86"},{"size":2796,"mtime":1618768579044,"results":"159","hashOfConfig":"86"},{"size":2104,"mtime":1618217002668,"results":"160","hashOfConfig":"86"},{"size":2984,"mtime":1618298222115,"results":"161","hashOfConfig":"86"},{"size":670,"mtime":1618216614058,"results":"162","hashOfConfig":"86"},{"size":2075,"mtime":1618768748146,"results":"163","hashOfConfig":"86"},{"size":643,"mtime":1618768532106,"results":"164","hashOfConfig":"86"},{"size":2705,"mtime":1618769177168,"results":"165","hashOfConfig":"86"},{"size":677,"mtime":1618322387540,"results":"166","hashOfConfig":"86"},{"size":4791,"mtime":1618774601040,"results":"167","hashOfConfig":"86"},{"size":738,"mtime":1618648144818,"results":"168","hashOfConfig":"86"},{"size":1422,"mtime":1618773522121,"results":"169","hashOfConfig":"86"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},"qpybk7",{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"172"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"172"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"172"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"259","usedDeprecatedRules":"172"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"264","usedDeprecatedRules":"172"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"267","usedDeprecatedRules":"172"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"270","usedDeprecatedRules":"172"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"273","usedDeprecatedRules":"172"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"276","usedDeprecatedRules":"172"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"279","usedDeprecatedRules":"172"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"282","usedDeprecatedRules":"172"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"285","messages":"286","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"287","usedDeprecatedRules":"172"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"290","usedDeprecatedRules":"172"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"299","usedDeprecatedRules":"172"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"304","usedDeprecatedRules":"172"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"323","messages":"324","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"327","messages":"328","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"335","messages":"336","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"339","messages":"340","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"345","messages":"346","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"347","messages":"348","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"349","messages":"350","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"351","messages":"352","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"353","messages":"354","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\reactjs\\munniehomespa-project\\src\\index.js",[],["355","356"],"C:\\reactjs\\munniehomespa-project\\src\\reportWebVitals.js",[],"C:\\reactjs\\munniehomespa-project\\src\\App.js",[],"C:\\reactjs\\munniehomespa-project\\src\\components\\Header\\Header.js",[],"C:\\reactjs\\munniehomespa-project\\src\\components\\Footer\\Footer.js",[],"C:\\reactjs\\munniehomespa-project\\src\\components\\Header\\Navigation\\Navigation.js",[],"C:\\reactjs\\munniehomespa-project\\src\\components\\Header\\Navigation\\NavigationItem\\NavigationItem.js",[],"C:\\reactjs\\munniehomespa-project\\src\\components\\UI\\Layout\\Layout.js",[],"C:\\reactjs\\munniehomespa-project\\src\\hoc\\Auxulliary.js",[],"C:\\reactjs\\munniehomespa-project\\src\\components\\Header\\Navigation\\SideDrawer\\SideDrawer.js",[],"C:\\reactjs\\munniehomespa-project\\src\\components\\UI\\Backdrop\\Backdrop.js",[],"C:\\reactjs\\munniehomespa-project\\src\\components\\Footer\\FooterColumn\\FooterColumn.js",[],"C:\\reactjs\\munniehomespa-project\\src\\components\\UI\\Button\\Button.js",[],"C:\\reactjs\\munniehomespa-project\\src\\pages\\Index\\Index.js",[],"C:\\reactjs\\munniehomespa-project\\src\\pages\\Index\\About\\About.js",[],"C:\\reactjs\\munniehomespa-project\\src\\pages\\Index\\Welcome\\Welcome.js",[],"C:\\reactjs\\munniehomespa-project\\src\\pages\\Index\\About\\Content\\Content.js",[],"C:\\reactjs\\munniehomespa-project\\src\\pages\\Index\\Welcome\\Book\\Book.js",[],"C:\\reactjs\\munniehomespa-project\\src\\pages\\Error\\Error.js",[],"C:\\reactjs\\munniehomespa-project\\src\\pages\\Service\\Service.js",["357","358","359"],"import React, {useState, useEffect} from 'react'\r\nimport classes from './Service.module.css';\r\nimport {Helmet} from 'react-helmet';\r\nimport Layout from '../../components/UI/Layout/Layout';\r\nimport Aux from '../../hoc/Auxulliary';\r\nimport ServiceItem from './ServiceItem/ServiceItem';\r\nimport Type from './Type/Type';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {getService} from '../../actions/service';\r\nimport {getType, selectType} from '../../actions/type';\r\n\r\nconst Service =()=>{\r\n    const serviceList = useSelector(state=>state.service.list);\r\n    const serviceLoading = useSelector(state=>state.service.loading);\r\n    const serviceError = useSelector(state=>state.service.error);\r\n    const typeList = useSelector(state=>state.type.list);\r\n    const typeLoading = useSelector(state=>state.type.loading);\r\n    const typeError = useSelector(state=>state.type.error);\r\n    const dispatch = useDispatch();\r\n    //get data from firebase using firebase npm\r\n    useEffect(() => {\r\n        if(Object.keys(serviceList).length === 0){\r\n            dispatch(getService())\r\n        }\r\n        if(Object.keys(typeList).length === 0){\r\n            dispatch(getType())\r\n        }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n    //choose Type and display Service\r\n    const chooseTypeHandler = (index)=>{\r\n        let newTypes = {...typeList};\r\n        Object.values(newTypes).map(type=>(type.under = false));\r\n        newTypes[index].under = true;\r\n        dispatch(selectType(newTypes));\r\n    }\r\n    console.log(serviceList)\r\n    //display Spinner and choose type and services\r\n    let servicePage = <Spinner/>\r\n    if(!serviceLoading && !typeLoading){\r\n        let chosenType = null;\r\n        Object.values(typeList).find(type=>{\r\n            if(type.under === true){\r\n                chosenType = type.id;\r\n                return chosenType;\r\n            }\r\n            return null;\r\n        })\r\n        let typeDisplay = [];\r\n        for(let key in typeList){\r\n            typeDisplay.push(\r\n                <Type\r\n                id={typeList[key].data}\r\n                key={key}\r\n                name={typeList[key].name}\r\n                under={typeList[key].under}\r\n                clicked= {()=>chooseTypeHandler(key)}\r\n                />\r\n            )\r\n        }\r\n        let serviceDisplay = [];\r\n        for(let key in serviceList){\r\n            if(serviceList[key]['type'] === chosenType){\r\n                serviceDisplay.push(\r\n                    <ServiceItem\r\n                    key = {key}\r\n                    service = {serviceList[key]['name']}\r\n                    image = {serviceList[key]['image']}\r\n                    des = {serviceList[key]['des']}\r\n                    english = {serviceList[key]['english']}\r\n                    time = {serviceList[key]['time']}\r\n                    price = {serviceList[key]['price']}\r\n                    />\r\n                )\r\n            }\r\n        }\r\n        servicePage = (\r\n            <div>\r\n                <div className={classes.TypeList}>\r\n                    {typeDisplay}\r\n                </div>\r\n                <div className = {classes.ServiceList}>\r\n                    {serviceDisplay}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n   \r\n    return(\r\n        <Aux>\r\n            <Helmet>\r\n                <title>Munnie Homéspa | Service Page</title>\r\n            </Helmet>\r\n            <Layout>\r\n                <div className = {classes.Page}>\r\n                    <div className = {classes.Header}>\r\n                        <div className={classes.Title}>Service</div>\r\n                    </div>\r\n                    <div className={classes.Content}>\r\n                        {servicePage}\r\n                    </div>\r\n                </div>\r\n            </Layout>\r\n        </Aux>\r\n    )\r\n}\r\nexport default Service;","C:\\reactjs\\munniehomespa-project\\src\\pages\\Index\\Services\\Services.js",["360"],"import React, { useState, useEffect } from 'react'\r\nimport classes from './Services.module.css';\r\nimport Button from '../../../components/UI/Button/Button';\r\nimport Service from './Service/Service';\r\nimport Spinner from '../../../components/UI/Spinner/Spinner';\r\nimport {Link} from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {getService} from '../../../actions/service';\r\n\r\nconst Services = () =>{\r\n    const list = useSelector(state=>state.service.list);\r\n    const loading = useSelector(state=>state.service.loading);\r\n    const error = useSelector(state=>state.service.error);\r\n    if(error){\r\n        console.log(error);\r\n    }\r\n    console.log(list);\r\n    const dispatch = useDispatch();\r\n    useEffect(()=>{\r\n        if(Object.keys(list).length === 0){\r\n            dispatch(getService())\r\n        }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n    let display = <Spinner/>;\r\n    if(!loading){\r\n        let serviceDisplay = [];\r\n        for(let key in list){\r\n            serviceDisplay.push(\r\n                <Service\r\n                    key = {key}\r\n                    service ={list[key].name}\r\n                    image = {list[key].image}\r\n                    eng = {list[key].english}\r\n                    time = {list[key].time}\r\n                    price = {list[key].price}\r\n                />\r\n            )\r\n        }\r\n    display = (\r\n        <div className={classes.Service}>\r\n            {serviceDisplay.slice(0,3)}\r\n        </div>\r\n        )\r\n    }\r\n\r\n        return(\r\n            <div className={classes.Services}>\r\n                <div className={classes.Title}>\r\n                    our services\r\n                </div>\r\n                    {display}\r\n                \r\n                <div className={classes.Qoute}>Munnie Homéspa is home of the beauty skincare\r\n                        so let's enjoy your time\r\n                </div>\r\n                <div className=\"clearfix\"></div>\r\n                <Link to=\"/service\"><Button>Book Now</Button></Link>\r\n            </div>\r\n        )\r\n    }\r\nexport default Services;","C:\\reactjs\\munniehomespa-project\\src\\pages\\Index\\Services\\Service\\Service.js",[],"C:\\reactjs\\munniehomespa-project\\src\\pages\\Index\\Voucher\\Voucher.js",[],"C:\\reactjs\\munniehomespa-project\\src\\pages\\Index\\Voucher\\Slider\\Slider.js",["361"],"import React, {useState, useEffect} from 'react';\r\nimport Slider from 'react-slick';\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport classes from './Slider.module.css'\r\nimport Spinner from '../../../../components/UI/Spinner/Spinner'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {getVoucher} from '../../../../actions/voucher';\r\nconst Sliders = ()=>{\r\n    const settings = {\r\n        dots: true,\r\n        infinite: true,\r\n        speed: 500,\r\n        slidesToShow: 1,\r\n        slidesToScroll: 1,\r\n        centerMode: true,\r\n        autoplay: true,\r\n        arrows:false\r\n    }\r\n    const list = useSelector(state=>state.voucher.list);\r\n    const loading = useSelector(state=>state.voucher.loading);\r\n    const error = useSelector(state=>state.voucher.error);\r\n    const dispatch = useDispatch();\r\n    if(error){\r\n        console.log(error);\r\n    }\r\n    useEffect(()=>{\r\n        if(Object.keys(list).length === 0){\r\n            dispatch(getVoucher())\r\n        }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    },[])\r\n    let voucherDisplay = [];\r\n    for(let key in list){\r\n        voucherDisplay.push(\r\n            <div className={classes.Slide} key={key}>\r\n                <a href ={list[key].link} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                    <img src = {list[key].image} alt=\"Voucher\"/>\r\n                </a>\r\n            </div>\r\n        )\r\n    }\r\n    let display = <Spinner/>;\r\n    if(!loading){\r\n        display = (<Slider {...settings}>\r\n            {voucherDisplay}\r\n        </Slider>)\r\n    }\r\n    return(\r\n        <div>\r\n            {display}\r\n        </div>\r\n    )\r\n}\r\nexport default Sliders;","C:\\reactjs\\munniehomespa-project\\src\\pages\\Service\\Type\\Type.js",[],"C:\\reactjs\\munniehomespa-project\\src\\pages\\Service\\ServiceItem\\ServiceItem.js",[],"C:\\reactjs\\munniehomespa-project\\src\\axios-order.js",[],["362","363"],"C:\\reactjs\\munniehomespa-project\\src\\components\\UI\\Spinner\\Spinner.js",[],"C:\\reactjs\\munniehomespa-project\\src\\components\\UI\\Social\\Social.js",[],"C:\\reactjs\\munniehomespa-project\\src\\components\\Firebase\\firebaseConfig.js",[],"C:\\reactjs\\munniehomespa-project\\src\\pages\\Contact\\Contact.js",[],"C:\\reactjs\\munniehomespa-project\\src\\pages\\Contact\\Info\\Info.js",[],"C:\\reactjs\\munniehomespa-project\\src\\pages\\Auth\\Auth.js",["364"],"C:\\reactjs\\munniehomespa-project\\src\\components\\UI\\Input\\Input.js",[],"C:\\reactjs\\munniehomespa-project\\src\\pages\\InputHandler.js",[],"C:\\reactjs\\munniehomespa-project\\src\\pages\\Admin\\dataConfig.js",[],"C:\\reactjs\\munniehomespa-project\\src\\components\\Search\\Search.js",[],"C:\\reactjs\\munniehomespa-project\\src\\pages\\Admin\\tableConfig.js",[],"C:\\reactjs\\munniehomespa-project\\src\\components\\Pagination\\Pagination.js",[],"C:\\reactjs\\munniehomespa-project\\src\\components\\UI\\Notifications\\Notifications.js",[],"C:\\reactjs\\munniehomespa-project\\src\\components\\UI\\Input\\styles.js",[],"C:\\reactjs\\munniehomespa-project\\src\\pages\\Booking\\Booking.js",["365","366","367"],"import React, {useState, useEffect} from 'react';\r\nimport useStyles from './styles.js';\r\nimport Input from '../../components/UI/Input/Input'\r\nimport Customer from './Customer/Customer'\r\nimport Service from './Service/Service'\r\nimport Time from './Time/Time'\r\nimport Staff from './Staff/Staff'\r\nimport firebase from '../../components/Firebase/firebaseConfig';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\nimport Aux from '../../hoc/Auxulliary';\r\n// import Notifications from '../../components/UI/Notifications/Notifications'\r\nimport {Box, Typography} from '@material-ui/core';\r\nimport {postBook, editBook} from '../../actions/book';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nconst Booking = (props) => {\r\n    const classes = useStyles();\r\n    const [bookInfo, setBookInfo] = useState({\r\n        customerId: '',\r\n        customerName: '',\r\n        customerPhone: '',\r\n        customerEmail: '',\r\n        serviceId:'',\r\n        serviceName:'',\r\n        duration:'',\r\n        price:'',\r\n        start: '',\r\n        staffId: '',\r\n        staffName:'',\r\n    })\r\n    const [formIsValid, setFormIsValid] = useState(false);\r\n    const dispatch = useDispatch();\r\n    useEffect(()=>{\r\n        let formIsValid = true;\r\n        for(let el in bookInfo){\r\n            formIsValid = bookInfo[el];\r\n            setFormIsValid(formIsValid);\r\n        }\r\n    },[bookInfo])\r\n    useEffect(()=>{\r\n        if(props.currentId){\r\n            setBookInfo(props.chosenBook);\r\n        }\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    },[])\r\n    const submitHandler=(e)=>{\r\n        e.preventDefault();\r\n        let endTime = null;\r\n        endTime = new Date(bookInfo.start);\r\n        endTime.setMinutes(endTime.getMinutes() + parseInt(bookInfo.duration));\r\n        endTime = endTime.toString()\r\n        let formData = {};\r\n        for(let i in bookInfo){\r\n            formData[i] = {value:bookInfo[i]};\r\n        }\r\n        formData[\"end\"] = {value:endTime};\r\n        formData['status']={value:'Coming'};\r\n        if(props.currentId){\r\n            dispatch(editBook(props.currentId,formData,'book',props.notification,props.setShowForm))\r\n        }else{\r\n            // console.log(formData);\r\n            dispatch(postBook(formData,'book',props.notification,props.setShowForm))\r\n        }\r\n    }\r\n    const cancelHandler= (e)=>{\r\n        e.preventDefault();\r\n        props.setShowForm(false);\r\n    }\r\n    let display = (\r\n        <Box  className={classes.root}>\r\n            <form className={classes.Form} >\r\n                <Box textAlign=\"center\">\r\n                    <Typography variant=\"h4\">Tạo lịch hẹn</Typography>\r\n                </Box>\r\n                <Customer bookInfo={bookInfo} setInfo = {setBookInfo} />\r\n                <hr/>\r\n                <Service bookInfo={bookInfo} setInfo = {setBookInfo}/>\r\n                <hr/>\r\n                <Time bookInfo={bookInfo} setInfo={setBookInfo}/>\r\n                <hr/>\r\n                <Staff bookInfo={bookInfo} setInfo={setBookInfo}/>\r\n                <Input disabled = {!formIsValid} clicked = {(e)=>submitHandler(e)} elementType=\"button\">\r\n                    {props.currentId ? 'Edit Booking': 'Add Booking'}\r\n                </Input>\r\n                <Input clicked = {(e)=>cancelHandler(e)} elementType=\"button\">Cancel Booking</Input>\r\n            </form>\r\n        </Box>\r\n    );\r\n    // if(loading){\r\n    //     display = <Spinner/>\r\n    // }\r\n    return (\r\n        <Aux>\r\n            {display}\r\n        </Aux>\r\n    )\r\n}\r\n\r\nexport default Booking\r\n","C:\\reactjs\\munniehomespa-project\\src\\pages\\Booking\\styles.js",[],"C:\\reactjs\\munniehomespa-project\\src\\pages\\Booking\\Customer\\Customer.js",["368"],"import React, {useEffect, useState, useRef} from 'react'\r\nimport useStyles from \"../styles.js\"\r\nimport Search from '../../../components/Search/Search';\r\nimport {Typography} from '@material-ui/core';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {getCustomer} from '../../../actions/customer';\r\nconst Customer = (props) => {\r\n    const classes = useStyles();\r\n    // const [data, setData] = useState(null);\r\n    const [search, setSearch] = useState('');\r\n    const [display, setDisplay] = useState(false);\r\n    const customerList = useSelector(state=>state.customer.list);\r\n    const customerLoading = useSelector(state=>state.customer.loading);\r\n    const customerError = useSelector(state=>state.customer.error);\r\n    const dispatch = useDispatch();\r\n    const [selected, setSelected] = useState({\r\n        name: '', phone: ''\r\n    })\r\n    const wrapperRef = useRef(null);\r\n    const [config] = useState({\r\n        name:{\r\n        title:\"Name\",\r\n        name:\"name\",\r\n        type:\"text\"\r\n    },\r\n    phone:{\r\n        title:\"Phone Number\",\r\n        name:\"phone\",\r\n        type:\"text\"\r\n    },\r\n    email:{\r\n        title:\"Email\",\r\n        name:\"email\",\r\n        type:\"text\"\r\n    },\r\n    })\r\n    useEffect(()=>{\r\n        if(Object.keys(customerList).length === 0){\r\n            dispatch(getCustomer())\r\n        }\r\n        document.addEventListener(\"mousedown\", handlerClickHandler)\r\n        return()=>{\r\n            document.removeEventListener(\"mousedown\", handlerClickHandler);\r\n        }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    },[])\r\n    useEffect(()=>{\r\n        if(props.bookInfo['customerId'] !== ''){\r\n            setSearch(props.bookInfo['customerName']);\r\n            setSelected(\r\n                {\r\n                    name: props.bookInfo['customerName'], \r\n                    phone: props.bookInfo['customerPhone']\r\n                })\r\n        }\r\n    },[props.bookInfo])\r\n    const handlerClickHandler= (event)=>{\r\n        const {current: wrap}= wrapperRef;\r\n        if(wrap && !wrap.contains(event.target)){\r\n            setDisplay(false)\r\n        }\r\n    }\r\n\r\n    let tableArray = [];\r\n        if(!customerLoading){\r\n            for(let el in customerList){\r\n                let content={};\r\n                for(let key in config){\r\n                    content[config[key][\"name\"]]= customerList[el][config[key][\"name\"]]\r\n                }\r\n                tableArray.push({\r\n                    id: el,\r\n                    data: content\r\n                })\r\n            }\r\n        }\r\n\r\n    const suggestSelectHandler =(id,name, phone,email)=>{\r\n        setSearch(name);\r\n        setDisplay(!display);\r\n        setSelected({name: name, phone: phone})\r\n        props.setInfo({\r\n            ...props.bookInfo,\r\n            customerId:id, \r\n            customerName:name,\r\n            customerPhone:phone,\r\n            customerEmail:email,\r\n        })\r\n        \r\n    }\r\n    const onChangeSearchHandler = (e)=>{\r\n        setSearch(e.target.value);\r\n        if(!e.target.value){\r\n            setSelected({name: '', phone: ''})\r\n            props.setInfo({\r\n                ...props.bookInfo,\r\n                customerId:'', \r\n                customerName:'',\r\n                customerPhone:'',\r\n                customerEmail:'',\r\n        })\r\n        }\r\n    }\r\n    return (\r\n        <fieldset ref = {wrapperRef}>\r\n            <legend>Thông tin khách hàng</legend>\r\n            <div className={classes.Search}>\r\n                <Search valued ={search}\r\n                placeholder = \"Nhập tên khách hàng hoặc số điện thoại\" \r\n                onChanged={(e)=>onChangeSearchHandler(e)}\r\n                onClicked ={()=>setDisplay(!display)}/>\r\n                {display && (\r\n                    <div className={classes.SuggestContainer}>\r\n                        {tableArray.filter(element=>{\r\n                            return element[\"data\"][\"name\"].toLowerCase().includes(search.toLowerCase())||element[\"data\"][\"phone\"].toLowerCase().includes(search.toLowerCase())\r\n                        })\r\n                        .map((v)=>{\r\n                            return <div className={classes.Suggest} \r\n                            key={v.id} \r\n                            onClick={()=>suggestSelectHandler(v[\"id\"],v[\"data\"][\"name\"],v[\"data\"][\"phone\"],v[\"data\"][\"email\"])}>\r\n                                {v[\"data\"][\"name\"]} - {v[\"data\"][\"phone\"]}\r\n                            </div>\r\n                        })}\r\n                    </div>\r\n                )}\r\n            </div>\r\n            <Typography variant=\"body1\" display=\"block\" className={classes.Info}>\r\n                Tên khách hàng: \r\n                {selected[\"name\"]}\r\n            </Typography>\r\n            <Typography variant=\"body1\" display=\"block\" className={classes.Info}>\r\n                Số điện thoại: \r\n                {selected[\"phone\"]}\r\n            </Typography>\r\n        </fieldset>\r\n    )\r\n}\r\n\r\nexport default Customer\r\n","C:\\reactjs\\munniehomespa-project\\src\\pages\\Booking\\Service\\Service.js",["369"],"import React, {useState, useEffect,useRef} from 'react'\r\nimport Search from '../../../components/Search/Search';\r\nimport useStyles from '../styles.js';\r\nimport {Typography} from '@material-ui/core';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {getService} from '../../../actions/service';\r\nconst Service = (props) => {\r\n    const classes = useStyles();\r\n    // const [data, setData] = useState(null);\r\n    const [search, setSearch] = useState('');\r\n    const [display, setDisplay] = useState(false);\r\n    const wrapperRef = useRef(null);\r\n    const serviceList = useSelector(state=>state.service.list);\r\n    const serviceLoading = useSelector(state=>state.service.loading);\r\n    const serviceError = useSelector(state=>state.service.error);\r\n    const dispatch = useDispatch();\r\n    const [selected, setSelected] = useState({\r\n        name:'',\r\n        time:'',\r\n        price:''\r\n        \r\n    })\r\n    const [config]= useState({\r\n        name:{\r\n            title:\"Service Name\",\r\n            name:\"name\",\r\n            type:\"text\"\r\n            },\r\n        price:{\r\n            title:\"Service Price\",\r\n            name:\"price\",\r\n            type:\"text\"\r\n        },\r\n        time:{\r\n            title:\"Service Duration\",\r\n            name:\"time\",\r\n            type:\"text\"\r\n        },\r\n    })\r\n    useEffect(()=>{\r\n        if(Object.keys(serviceList).length === 0){\r\n            dispatch(getService())\r\n        }\r\n        document.addEventListener(\"mousedown\", handlerClickHandler)\r\n        return()=>{\r\n            document.removeEventListener(\"mousedown\", handlerClickHandler);\r\n        }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    },[])\r\n\r\n    useEffect(()=>{\r\n        if(props.bookInfo['serviceId'] !== ''){\r\n            setSearch(props.bookInfo['serviceName']);\r\n            setSelected(\r\n                {\r\n                    name: props.bookInfo['serviceName'], \r\n                    time: props.bookInfo['duration'],\r\n                    price: props.bookInfo['price']\r\n                })\r\n        }\r\n    },[props.bookInfo])\r\n    const handlerClickHandler= (event)=>{\r\n        const {current: wrap}= wrapperRef;\r\n        if(wrap && !wrap.contains(event.target)){\r\n            setDisplay(false)\r\n        }\r\n    }\r\n    let tableArray = [];\r\n        if(!serviceLoading){\r\n            for(let el in serviceList){\r\n                let content={};\r\n                for(let key in config){\r\n                    content[config[key][\"name\"]]= serviceList[el][config[key][\"name\"]]\r\n                }\r\n                tableArray.push({\r\n                    id: el,\r\n                    data: content\r\n                })\r\n            }\r\n        }\r\n    \r\n    const suggestSelectHandler =(id,name, time, price)=>{\r\n        setSearch(name);\r\n        setDisplay(!display);\r\n        setSelected({name: name, time: time, price: price})\r\n        props.setInfo({\r\n            ...props.bookInfo,\r\n            serviceId:id, \r\n            serviceName:name, \r\n            duration:time, \r\n            price:price,\r\n        })\r\n    }\r\n    const onChangeSearchHandler = (e)=>{\r\n        setSearch(e.target.value);\r\n        if(!e.target.value){\r\n            setSelected({name: '', phone: ''})\r\n            props.setInfo({\r\n                ...props.bookInfo,\r\n                serviceId: '',\r\n                serviceName: '',\r\n                duration: '',\r\n                price: '',\r\n        })\r\n        }\r\n    }\r\n    return (\r\n        <fieldset ref = {wrapperRef}>\r\n            <legend>Thông tin dịch vụ</legend>\r\n            <div className={classes.Search}>\r\n                <Search valued = {search}\r\n                placeholder = \"Nhâp tên dịch vụ\"\r\n                onChanged={(e)=>onChangeSearchHandler(e)}\r\n                onClicked={()=>setDisplay(!display)}\r\n                />\r\n                {display && (\r\n                    <div className={classes.SuggestContainer}>\r\n                        {tableArray.filter(element=>{\r\n                            return element[\"data\"][\"name\"].toLowerCase().includes(search.toLowerCase())\r\n                        }).map((v)=>{\r\n                            return(<div className={classes.Suggest} \r\n                                key ={v.id}\r\n                                onClick = {()=>suggestSelectHandler(v[\"id\"],v[\"data\"][\"name\"],v[\"data\"][\"time\"],v[\"data\"][\"price\"])}>\r\n                                    {v[\"data\"][\"name\"]} - {v[\"data\"][\"time\"]} phút - {v[\"data\"][\"price\"]}.000VND\r\n                                </div>)\r\n                        })}\r\n                    </div>\r\n                )}\r\n            </div>\r\n            <Typography variant=\"body1\" display=\"block\" className={classes.Info}>Tên dịch vụ: {selected[\"name\"]}</Typography>\r\n            <Typography variant=\"body1\" display=\"block\" className={classes.Info}>Thời gian: {selected[\"time\"]}</Typography>\r\n            <Typography variant=\"body1\" display=\"block\" className={classes.Info}>Giá tiền: {selected[\"price\"]}</Typography>\r\n        </fieldset>\r\n    )\r\n}\r\n\r\nexport default Service\r\n","C:\\reactjs\\munniehomespa-project\\src\\pages\\Booking\\Time\\Time.js",["370","371"],"import React, {useState, useEffect} from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    width: '50%',\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 220,\r\n  },\r\n}));\r\n\r\nconst Time = (props) => {\r\n    const classes = useStyles();\r\n    const selectTimeHandler = (time)=>{\r\n      props.setInfo({\r\n        ...props.bookInfo,\r\n        start: time,\r\n      })\r\n    }\r\n    return (\r\n        <fieldset className={classes.container}>\r\n            <legend>Thời gian</legend>\r\n            <TextField\r\n                id=\"datetime-local\"\r\n                type=\"datetime-local\"\r\n                className={classes.textField}\r\n                onChange = {(e)=>selectTimeHandler(new Date(e.target.value).toString())}\r\n                InputLabelProps={{\r\n                shrink: false,\r\n                }}\r\n            />\r\n        </fieldset>\r\n    )\r\n}\r\n\r\nexport default Time\r\n","C:\\reactjs\\munniehomespa-project\\src\\pages\\Booking\\Staff\\Staff.js",["372"],"import React, {useEffect, useState, useRef} from 'react'\r\nimport useStyles from \"../styles.js\"\r\nimport Search from '../../../components/Search/Search';\r\nimport {Typography} from '@material-ui/core'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {getStaff} from '../../../actions/staff';\r\nconst Staff = (props) => {\r\n    const classes = useStyles();\r\n    // const [data, setData] = useState(null);\r\n    const [search, setSearch] = useState('');\r\n    const [display, setDisplay] = useState(false);\r\n    const [selected, setSelected] = useState({\r\n        name: ''\r\n    })\r\n    const wrapperRef = useRef(null);\r\n    const staffList = useSelector(state=>state.staff.list);\r\n    const staffLoading = useSelector(state=>state.staff.loading);\r\n    const staffError = useSelector(state=>state.staff.error);\r\n    const dispatch = useDispatch();\r\n    const [config] = useState({\r\n        name:{\r\n            title:\"Staff Name\",\r\n            name:\"name\",\r\n            type:\"text\"\r\n        },\r\n    })\r\n\r\n    useEffect(()=>{\r\n        if(Object.keys(staffList).length === 0){\r\n            dispatch(getStaff())\r\n        }\r\n        document.addEventListener(\"mousedown\", handlerClickHandler)\r\n        return()=>{\r\n            document.removeEventListener(\"mousedown\", handlerClickHandler);\r\n        }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    },[])\r\n        \r\n    useEffect(()=>{\r\n        if(props.bookInfo['staffId'] !== ''){\r\n            setSearch(props.bookInfo['staffName']);\r\n            setSelected(\r\n                {\r\n                    name: props.bookInfo['staffName'], \r\n                })\r\n        }\r\n    },[props.bookInfo])\r\n    const handlerClickHandler= (event)=>{\r\n        const {current: wrap}= wrapperRef;\r\n        if(wrap && !wrap.contains(event.target)){\r\n            setDisplay(false)\r\n        }\r\n    }\r\n\r\n    let tableArray = [];\r\n        if(!staffLoading){\r\n            for(let el in staffList){\r\n                let content={};\r\n                for(let key in config){\r\n                    content[config[key][\"name\"]]= staffList[el][config[key][\"name\"]]\r\n                }\r\n                tableArray.push({\r\n                    id: el,\r\n                    data: content\r\n                })\r\n            }\r\n        }\r\n    const suggestSelectHandler =(id,name)=>{\r\n        setSearch(name);\r\n        setDisplay(!display);\r\n        setSelected({name: name});\r\n        props.setInfo({\r\n            ...props.bookInfo,\r\n            staffId:id,\r\n            staffName:name\r\n        })\r\n    }\r\n    const onChangeSearchHandler = (e)=>{\r\n        setSearch(e.target.value);\r\n        if(!e.target.value){\r\n            setSelected({name: '', phone: ''})\r\n            props.setInfo({\r\n                ...props.bookInfo,\r\n                staffId: '',\r\n                staffName: '',\r\n        })\r\n        }\r\n    }\r\n    return (\r\n        <fieldset ref = {wrapperRef}>\r\n            <legend>Thông tin nhân viên</legend>\r\n            <div className={classes.Search}>\r\n                <Search valued = {search}\r\n                placeholder =\"Nhập tên nhân viên\"\r\n                onChanged={(e)=>onChangeSearchHandler(e)}\r\n                onClicked={()=>setDisplay(!display)}/>\r\n                {display && (\r\n                    <div className={classes.SuggestContainer}>\r\n                        {tableArray.filter(element=>{\r\n                            \r\n                            return element[\"data\"][\"name\"].toLowerCase().includes(search.toLowerCase())\r\n                        }).map(v=>{\r\n                            return <div className={classes.Suggest}\r\n                            key={v.id}\r\n                            onClick={()=>suggestSelectHandler(v[\"id\"],v[\"data\"][\"name\"])}>\r\n                                {v[\"data\"][\"name\"]}\r\n                            </div>\r\n                        })}\r\n                    </div>)}\r\n            </div>\r\n            <Typography variant=\"body1\" display=\"block\" className={classes.Info}>Tên nhân viên: {selected[\"name\"]}</Typography>\r\n        </fieldset>\r\n    )\r\n}\r\n\r\nexport default Staff\r\n","C:\\reactjs\\munniehomespa-project\\src\\components\\AHeader\\Header.js",["373","374","375"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {Typography, Grid} from '@material-ui/core/';\r\nimport {Link} from 'react-router-dom';\r\nimport {List, ListItem, ListItemIcon, ListItemText, Divider} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles({\r\n        root: {\r\n            width:'15%',\r\n            float: 'left',\r\n            height:'100%',\r\n            backgroundColor:'#dbb89a',\r\n            position:'fixed',\r\n        },\r\n        Text:{\r\n            '&:hover':{\r\n                transform: 'scale(1.1)',\r\n            } \r\n        },\r\n        });\r\nconst Header =() => {\r\n    const classes = useStyles();\r\n    return(\r\n        <header className={classes.root}>\r\n            <List component=\"nav\">\r\n                <Link to =\"/admin/dashboard\">\r\n                    <ListItem button>\r\n                        <ListItemText className={classes.Text}>\r\n                            Welcome, Admin\r\n                        </ListItemText>\r\n                    </ListItem>\r\n                </Link>\r\n            </List>\r\n            <Divider />\r\n            <List component=\"nav\">\r\n                <Link to=\"/admin/dashboard\">\r\n                    <ListItem button>\r\n                        <ListItemText className={classes.Text}>\r\n                            Dashboard\r\n                        </ListItemText>\r\n                    </ListItem>\r\n                </Link>\r\n                <Link to=\"/admin/service\">\r\n                    <ListItem button>\r\n                        <ListItemText className={classes.Text}>\r\n                            Service\r\n                        </ListItemText>\r\n                    </ListItem>\r\n                </Link>\r\n                <Link to=\"/admin/customer\">\r\n                    <ListItem button>\r\n                        <ListItemText className={classes.Text}>\r\n                            Customer\r\n                        </ListItemText>\r\n                    </ListItem>\r\n                </Link>\r\n                <Link to=\"/admin/staff\">\r\n                    <ListItem button>\r\n                        <ListItemText className={classes.Text}>\r\n                            Staff\r\n                        </ListItemText>\r\n                    </ListItem>\r\n                </Link>\r\n                <Link to=\"/admin/voucher\">\r\n                    <ListItem button>\r\n                        <ListItemText className={classes.Text}>\r\n                            Voucher\r\n                        </ListItemText>\r\n                    </ListItem>\r\n                </Link>\r\n                <Link to=\"/admin/type\">\r\n                    <ListItem button>\r\n                        <ListItemText className={classes.Text}>\r\n                            Type\r\n                        </ListItemText>\r\n                    </ListItem>\r\n                </Link>\r\n            </List>\r\n        </header>\r\n    )\r\n}\r\nexport default Header;","C:\\reactjs\\munniehomespa-project\\src\\pages\\Admin\\Staff.js",["376"],"import React, {useState,useEffect, useRef} from 'react'\r\nimport AddForm from './addForm';\r\nimport Header from '../../components/AHeader/Header'\r\nimport {staffConfig} from './dataConfig';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\nimport DisplayTable from './displayTable';\r\nimport {staffTable} from './tableConfig';\r\nimport Notifications from '../../components/UI/Notifications/Notifications'\r\nimport {Typography, Box} from '@material-ui/core'\r\nimport Button from './Button.js'\r\nimport useStyles from './styles.js';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {getStaff} from '../../actions/staff';\r\nconst Staff = ()=>{\r\n    const classes = useStyles();\r\n    const [config,setConfig] = useState(staffConfig);\r\n    const [status, setStatus] = useState(\"list\");\r\n    // const [data, setData] = useState(null);\r\n    const [editItem, setEditItem]= useState(null);\r\n    const [currentID, setCurrentId] = useState(null)\r\n    const notificationRef = useRef();\r\n    const staffList = useSelector(state=>state.staff.list);\r\n    const staffLoading = useSelector(state=>state.staff.loading);\r\n    const staffError = useSelector(state=>state.staff.error);\r\n    const dispatch = useDispatch();\r\n    useEffect(()=>{\r\n        if(Object.keys(staffList).length === 0){\r\n            dispatch(getStaff())\r\n        }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n    useEffect(()=>{\r\n        setConfig(staffConfig);\r\n    }, [status])\r\n    const editHandler =(id)=>{\r\n        let newConfig = JSON.parse(JSON.stringify(config));\r\n\r\n        for(let key in newConfig){\r\n            newConfig[key][\"value\"] = staffList[id][key];\r\n        }\r\n        setEditItem(newConfig);\r\n        setCurrentId(id)\r\n        setStatus(\"edit\");\r\n        \r\n    }\r\n\r\n    let page = <Spinner/>;\r\n    if(status === \"list\" && !staffLoading){\r\n        page = <DisplayTable \r\n        type=\"staff\"\r\n        data={staffList} \r\n        config={staffTable}\r\n        setId = {editHandler}\r\n        notificationRef={notificationRef}/>\r\n    }\r\n    if(status === \"edit\"){\r\n        page = <AddForm formType = \"staff\"\r\n        config={editItem} \r\n        setCon={setEditItem}\r\n        currentID = {currentID}\r\n        cancel={setStatus}\r\n        title=\"Edit Type\"\r\n        notificationRef={notificationRef}/>\r\n    }\r\n    if(status === \"add\"){\r\n        page = <AddForm formType = \"staff\" \r\n        config={config} \r\n        setCon={setConfig}\r\n        cancel={setStatus}\r\n        title=\"Add New Staff\"\r\n        notificationRef={notificationRef}/>\r\n    }\r\n    return(\r\n        <div className={classes.Page}>\r\n            <Header/>\r\n            <Box className={classes.Display}>\r\n                <Box textAlign=\"center\">\r\n                    <Typography variant=\"h3\">\r\n                        Staff\r\n                    </Typography>\r\n                </Box>\r\n                <Button setStatus={setStatus} \r\n                status={status}\r\n                name='Staff'/>\r\n                {page}\r\n                <Notifications ref={notificationRef}/>\r\n            </Box>\r\n        </div>\r\n    )\r\n}\r\nexport default Staff","C:\\reactjs\\munniehomespa-project\\src\\pages\\Admin\\Type.js",["377"],"import React, {useState, useEffect, useRef} from 'react'\r\nimport AddForm from './addForm';\r\nimport Header from '../../components/AHeader/Header'\r\nimport {typeConfig} from './dataConfig';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\nimport DisplayTable from './displayTable';\r\nimport {typeTable} from './tableConfig';\r\nimport Notifications from '../../components/UI/Notifications/Notifications'\r\nimport {Typography, Box} from '@material-ui/core'\r\nimport Button from './Button.js'\r\nimport useStyles from './styles.js'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {getType} from '../../actions/type';\r\nconst Type = ()=>{\r\n    const classes = useStyles();\r\n    const [config,setConfig] = useState(typeConfig);\r\n    const [status, setStatus] = useState(\"list\");\r\n    // const [data, setData] = useState(null);\r\n    const [editItem, setEditItem]= useState(null);\r\n    const [currentID, setCurrentId] = useState(null)\r\n    const notificationRef = useRef();\r\n    const typeList = useSelector(state=>state.type.list);\r\n    const typeLoading = useSelector(state=>state.type.loading);\r\n    const typeError = useSelector(state=>state.type.error);\r\n    const dispatch = useDispatch();\r\n    useEffect(()=>{\r\n        // getType(setData);\r\n        if(Object.keys(typeList).length === 0){\r\n            dispatch(getType())\r\n        }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n    useEffect(()=>{\r\n        setConfig(typeConfig);\r\n    }, [status])\r\n\r\n    const editHandler =(id)=>{\r\n        let newConfig = JSON.parse(JSON.stringify(config));\r\n        for(let key in newConfig){\r\n            newConfig[key][\"value\"] = typeList[id][key];\r\n        }\r\n        setEditItem(newConfig);\r\n        setCurrentId(id)\r\n        setStatus(\"edit\");\r\n    }\r\n    let page = <Spinner/>;\r\n    if(status === \"list\" && !typeLoading){\r\n        page = <DisplayTable \r\n        type=\"type\"\r\n        data={typeList} \r\n        config={typeTable}\r\n        setId = {editHandler}\r\n        notificationRef={notificationRef}/>\r\n    }\r\n    if(status === \"edit\"){\r\n        page = <AddForm formType = \"type\"\r\n        config={editItem} \r\n        setCon={setEditItem}\r\n        currentID = {currentID}\r\n        cancel={setStatus}\r\n        title=\"Edit Type\"\r\n        notificationRef={notificationRef}/>\r\n    }\r\n    if(status === \"add\"){\r\n        page = <AddForm formType = \"type\"\r\n        config={config} \r\n        setCon={setConfig}\r\n        cancel={setStatus}\r\n        title=\"Add New Type\"\r\n        notificationRef={notificationRef}/>\r\n    }\r\n    return(\r\n        <div className={classes.Page}>\r\n            <Header/>\r\n            <Box className={classes.Display}>\r\n                <Box textAlign=\"center\">\r\n                    <Typography variant=\"h3\">\r\n                        Type\r\n                    </Typography>\r\n                </Box>\r\n                <Button setStatus={setStatus} \r\n                status={status}\r\n                name='Type'/>\r\n                {page}\r\n                <Notifications ref={notificationRef}/>\r\n            </Box>\r\n        </div>\r\n    )\r\n}\r\nexport default Type","C:\\reactjs\\munniehomespa-project\\src\\pages\\Admin\\Service.js",["378","379"],"C:\\reactjs\\munniehomespa-project\\src\\pages\\Admin\\Voucher.js",["380","381"],"import React, {useState, useEffect,useRef} from 'react'\r\nimport AddForm from './addForm';\r\nimport Header from '../../components/AHeader/Header'\r\nimport {voucherConfig} from './dataConfig';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\nimport DisplayTable from './displayTable';\r\nimport {voucherTable} from './tableConfig';\r\nimport Notifications from '../../components/UI/Notifications/Notifications'\r\nimport {Typography, Box} from '@material-ui/core'\r\nimport Button from './Button.js'\r\nimport useStyles from './styles.js'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {getVoucher} from '../../actions/voucher';\r\nconst Voucher = ()=>{\r\n    const classes = useStyles();\r\n    const [config,setConfig] = useState(voucherConfig);\r\n    const [status, setStatus] = useState(\"list\");\r\n    // const [data, setData] = useState(null);\r\n    const [editItem, setEditItem]= useState(null);\r\n    const [currentID, setCurrentId] = useState(null)\r\n    const notificationRef = useRef();\r\n    const voucherList = useSelector(state=>state.voucher.list);\r\n    const voucherLoading = useSelector(state=>state.voucher.loading);\r\n    const voucherError = useSelector(state=>state.voucher.error);\r\n    const dispatch = useDispatch();\r\n    useEffect(()=>{\r\n        if(Object.keys(voucherList).length === 0){\r\n            dispatch(getVoucher())\r\n        }\r\n    }, [])\r\n    useEffect(()=>{\r\n        setConfig(voucherConfig);\r\n    }, [status])\r\n\r\n    const editHandler =(id)=>{\r\n        let newConfig = JSON.parse(JSON.stringify(config));\r\n        for(let key in newConfig){\r\n            newConfig[key][\"value\"] = voucherList[id][key];\r\n        }\r\n        setEditItem(newConfig);\r\n        setCurrentId(id)\r\n        setStatus(\"edit\");\r\n    }\r\n\r\n    let page = <Spinner/>;\r\n    if(status === \"list\" && !voucherLoading){\r\n        page = <DisplayTable \r\n        data={voucherList} \r\n        config={voucherTable} \r\n        type=\"voucher\"\r\n        setId = {editHandler}\r\n        notificationRef={notificationRef}/>\r\n    }\r\n    if(status === \"edit\"){\r\n        page = <AddForm formType = \"voucher\"\r\n        config={editItem} \r\n        setCon={setEditItem}\r\n        currentID = {currentID}\r\n        cancel={setStatus}\r\n        title=\"Add New Voucher\"\r\n        notificationRef={notificationRef}/>\r\n    }\r\n    if(status === \"add\"){\r\n        page = <AddForm formType = \"voucher\" \r\n        config={config} \r\n        setCon={setConfig}\r\n        cancel={setStatus}\r\n        title=\"Add New Voucher\"\r\n        notificationRef={notificationRef}/>\r\n    }\r\n    return(\r\n        <div className={classes.Page}>\r\n            <Header/>\r\n            <Box className={classes.Display}>\r\n                <Box textAlign=\"center\">\r\n                    <Typography variant=\"h3\">\r\n                        Voucher\r\n                    </Typography>\r\n                </Box>\r\n                <Button setStatus={setStatus} \r\n                status={status}\r\n                name='Voucher'/>\r\n                {page}\r\n                <Notifications ref={notificationRef}/>\r\n            </Box>\r\n        </div>\r\n    )\r\n}\r\nexport default Voucher","C:\\reactjs\\munniehomespa-project\\src\\pages\\Admin\\Customer.js",["382"],"import React, {useState, useEffect, useRef} from 'react'\r\nimport AddForm from './addForm';\r\nimport Header from '../../components/AHeader/Header'\r\nimport {customerConfig} from './dataConfig';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\nimport DisplayTable from './displayTable';\r\nimport {customerTable} from './tableConfig';\r\nimport Notifications from '../../components/UI/Notifications/Notifications'\r\nimport { Box, Typography} from '@material-ui/core'\r\nimport useStyles from './styles.js'\r\nimport Button from './Button.js'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {getCustomer} from '../../actions/customer';\r\nconst Customer = ()=>{\r\n    const classes = useStyles();\r\n    const [config,setConfig] = useState(customerConfig);\r\n    const [status, setStatus] = useState(\"list\");\r\n    const [editItem, setEditItem]= useState(null);\r\n    const [currentID, setCurrentId] = useState(null)\r\n    const notificationRef = useRef();\r\n    const customerList = useSelector(state=>state.customer.list);\r\n    const customerLoading = useSelector(state=>state.customer.loading);\r\n    const customerError = useSelector(state=>state.customer.error);\r\n    const dispatch = useDispatch();\r\n    useEffect(()=>{\r\n        // getCustomer(setData);\r\n        if(Object.keys(customerList).length === 0){\r\n            dispatch(getCustomer())\r\n        }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n    useEffect(()=>{\r\n        setConfig(customerConfig);\r\n    }, [status])\r\n\r\n    const editHandler =(id)=>{\r\n        let newConfig = JSON.parse(JSON.stringify(config));\r\n        for(let key in newConfig){\r\n            newConfig[key][\"value\"] = customerList[id][key];\r\n        }\r\n        setEditItem(newConfig);\r\n        setCurrentId(id)\r\n        setStatus(\"edit\");\r\n    }\r\n\r\n    let page = <Spinner/>;\r\n    if(status === \"list\" && !customerLoading){\r\n        page = <DisplayTable \r\n        data={customerList} \r\n        config ={customerTable} \r\n        type=\"customer\"\r\n        setId = {editHandler}\r\n        notificationRef={notificationRef}/>\r\n    }\r\n    if(status === \"edit\"){\r\n        page = <AddForm formType = \"customer\"\r\n        config={editItem} \r\n        setCon={setEditItem}\r\n        currentID = {currentID}\r\n        cancel={setStatus}\r\n        title=\"Edit Customer\"\r\n        notificationRef={notificationRef}/>\r\n    }\r\n    if(status === \"add\"){\r\n        page = <AddForm formType = \"customer\"\r\n        config={config} \r\n        setCon={setConfig}\r\n        cancel={setStatus}\r\n        title=\"Add New Customer\"\r\n        notificationRef={notificationRef}/>\r\n    }\r\n    return(\r\n        <div className={classes.Page}>\r\n            <Header/>\r\n            <Box className={classes.Display}>\r\n                <Box textAlign=\"center\">\r\n                        <Typography variant=\"h3\">\r\n                            Customer\r\n                        </Typography>\r\n                </Box>\r\n                <Button setStatus={setStatus} \r\n                status={status}\r\n                name='Customer'/>\r\n                {page}\r\n                <Notifications ref={notificationRef}/>\r\n            </Box>\r\n        </div>\r\n    )\r\n}\r\nexport default Customer;","C:\\reactjs\\munniehomespa-project\\src\\pages\\Admin\\addForm.js",[],"C:\\reactjs\\munniehomespa-project\\src\\pages\\Admin\\displayTable.js",["383"],"C:\\reactjs\\munniehomespa-project\\src\\pages\\Admin\\styles.js",[],"C:\\reactjs\\munniehomespa-project\\src\\pages\\Admin\\Button.js",["384"],"import React, {useState} from 'react'\r\nimport {Box, Button} from '@material-ui/core';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nconst useStyles = makeStyles({\r\n    root:{\r\n        margin: '20px 0',\r\n    },\r\n    Button:{\r\n        color: 'green',\r\n        borderColor:'green',\r\n        margin: '0 10px',\r\n    },\r\n    Active:{\r\n        color:'white',\r\n        backgroundColor: 'green',\r\n        borderColor: 'green',\r\n        '&:hover':{\r\n            backgroundColor:'green',\r\n            borderColor: 'green',\r\n        }\r\n    }\r\n});\r\nconst ButtonBox = (props) => {\r\n    const classes = useStyles();\r\n    return (\r\n        <Box className={classes.root}>\r\n            <ButtonItem name=\"list\" \r\n            setStatus = {props.setStatus}\r\n            status={props.status}>\r\n                Thông tin {props.name}\r\n            </ButtonItem>\r\n            <ButtonItem name=\"add\" \r\n            setStatus = {props.setStatus}\r\n            status={props.status}>\r\n                Thêm {props.name}\r\n            </ButtonItem>\r\n        </Box>\r\n    )\r\n}\r\n\r\n\r\nconst ButtonItem = (props)=>{\r\n    const classes = useStyles();\r\n    let icon = <InfoIcon/>\r\n    let style = classes.Button\r\n    if(props.name === \"add\"){\r\n        icon = <AddCircleIcon/>\r\n    }\r\n    if(props.name === props.status){\r\n        style= classes.Active\r\n        \r\n    }\r\n    return(\r\n        <Button variant=\"outlined\" \r\n        className={style}\r\n        startIcon = {icon}\r\n        onClick={()=>props.setStatus(props.name)}>\r\n            {props.children}\r\n        </Button>\r\n    )\r\n}\r\nexport default ButtonBox;","C:\\reactjs\\munniehomespa-project\\src\\pages\\Auth\\Login.js",[],"C:\\reactjs\\munniehomespa-project\\src\\pages\\ShowBook\\ShowBook.js",["385","386","387"],"import React, {useState, useEffect, useRef} from 'react'\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport {Table, TableBody, TableCell, TableContainer, \r\n    TableHead, TableRow, Paper, Box, Button} from '@material-ui/core';\r\n    import AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport ShowInfo from './ShowInfo';\r\nimport Spinner from '../../components/UI/Spinner/Spinner'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {getStaff} from '../../actions/staff';\r\nimport {getBook} from '../../actions/book';\r\nimport SelectStaff from './SelectStaff';\r\n\r\nimport Booking from '../Booking/Booking';\r\nimport Header from '../../components/AHeader/Header'\r\nimport Aux from '../../hoc/Auxulliary';\r\nimport useStyles from './styles.js';\r\nimport Notifications from '../../components/UI/Notifications/Notifications'\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n    root:{\r\n        '&:first-of-type':{\r\n            width:'15%',\r\n        },\r\n        borderLeft: '1px solid #ebcdb7',\r\n        borderRight: '1px solid #ebcdb7',\r\n        verticalAlign: 'top',\r\n    },\r\n    head: {\r\n        backgroundColor: '#dbb89a',\r\n        color: 'black',\r\n    },\r\n    body: {\r\n        fontSize: 14,\r\n    },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\nroot: {\r\n    '&:nth-of-type(odd)': {\r\n    backgroundColor: '#fff6f3',\r\n    },\r\n    \r\n},\r\n}))(TableRow);\r\n\r\nconst ShowBook = (props) => {\r\n    const classes= useStyles();\r\n    const [showForm, setShowForm] = useState(false);\r\n    const notificationRef = useRef();\r\n    const [numberOfColumns, setNumberOfColumns] = useState(3);\r\n    const [staff, setStaff] = useState('All');\r\n    const staffList = useSelector(state=>state.staff.list);\r\n    const staffLoading = useSelector(state=>state.staff.loading);\r\n    const staffError = useSelector(state=>state.staff.error);\r\n    const bookList = useSelector(state=>state.book.list);\r\n    const bookLoading = useSelector(state=>state.book.loading);\r\n    const bookError = useSelector(state=>state.book.error);\r\n    const [chosenBook, setChosenBook] = useState({\r\n        customerId: '',\r\n        customerName: '',\r\n        customerPhone: '',\r\n        customerEmail: '',\r\n        serviceId:'',\r\n        serviceName:'',\r\n        duration:'',\r\n        end:'',\r\n        price:'',\r\n        start: '',\r\n        staffId: '',\r\n        staffName:'',\r\n    });\r\n    const [chosenId, setChosenId] = useState('');\r\n    const [edit, setEdit] = useState(false)\r\n    const dispatch = useDispatch();\r\n    const [config, setConfig] = useState(\r\n        {\r\n        elementType: 'select',\r\n        elementConfig:{\r\n            options:[]\r\n        },\r\n        value: '',\r\n        validation:{\r\n            required: true,\r\n        },\r\n        valid: false,\r\n        touched:false\r\n    })\r\n    \r\n    useEffect(()=>{\r\n        if(Object.keys(staffList).length === 0){\r\n            dispatch(getStaff())\r\n        }\r\n        if(Object.keys(bookList).length === 0){\r\n            dispatch(getBook())\r\n        }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    },[])\r\n    useEffect(()=>{\r\n        if(Object.keys(staffList).length > 0){\r\n            const staffArray =[];\r\n            for(let key in staffList){\r\n                staffArray.push({\r\n                    value:staffList[key]['name'],\r\n                    display:staffList[key]['name']\r\n                })\r\n            }\r\n            staffArray.push({\r\n                value: 'All',\r\n                display: 'All',\r\n            })\r\n            const newData = {...config};\r\n            newData['value'] = staff;\r\n            for(let i in staffArray){\r\n                newData['elementConfig']['options'][i] = staffArray[i];\r\n            }\r\n            setConfig(newData);\r\n        }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    },[staff,staffList])\r\n\r\n\r\n    useEffect(()=>{\r\n        (staff === 'All')? setNumberOfColumns(Object.keys(staffList).length): setNumberOfColumns(5)\r\n    },[staff,staffList])\r\n\r\n    const formatNumberHandler = (number)=>{\r\n        return number.toLocaleString('en-US',{\r\n            minimumIntegerDigits: 2,\r\n            useGrouping: false\r\n        })\r\n    }\r\n    const getDay = (number)=>{\r\n        const dayArray = ['Chủ nhật', 'Thứ Hai', 'Thứ Ba', 'Thứ Tư', 'Thứ Năm', 'Thứ Sáu', 'Thứ Bảy']\r\n        return( number <7? dayArray[number]: dayArray[number - 7])\r\n    }\r\n    let header = [];\r\n    if(staff === 'All'){\r\n        for(let key in staffList){\r\n            header.push(\r\n                <StyledTableCell key={key}>{staffList[key]['name']}</StyledTableCell>\r\n            )\r\n        }\r\n    }else{\r\n        for(let a = 0; a< numberOfColumns; a++){\r\n            const date = new Date();\r\n            date.setDate(date.getDate() + a);\r\n            header.push(\r\n                    <StyledTableCell key={date}>{getDay(date.getDay())}</StyledTableCell>\r\n            )\r\n        }\r\n    }\r\n    const checkBook =(date,staffName)=>{\r\n        let checkedStaff = staff\r\n        if(staffName){\r\n            checkedStaff = staffName\r\n        }\r\n        for(let key in bookList){\r\n            if(bookList[key]['staffName'] === checkedStaff){\r\n                let start = new Date(bookList[key]['start']);\r\n                let end = new Date(bookList[key]['end'])\r\n                if(start <= date && date<= end){\r\n                    let dif = (date.getTime() - start.getTime())/60000\r\n                    let merge = Math.ceil(parseInt(bookList[key]['duration'])/15)\r\n                    if(dif < 15){\r\n                        return [bookList[key], true,merge, key]\r\n                    }\r\n                    else{\r\n                        return [true, false]\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    let rows = [];\r\n    for(let i = 0;i < 53; i ++){\r\n        const date = new Date();\r\n        date.setHours(7,0,0);\r\n        date.setMinutes(date.getMinutes() + i*15);\r\n        let column = [];\r\n        if(staff === 'All'){\r\n            for(let b in staffList){\r\n                let InfoList = checkBook(date,staffList[b]['name']);\r\n                if(InfoList){\r\n                    if(InfoList[1]){\r\n                        column.push(\r\n                            <StyledTableCell \r\n                            className={classes.Booked} \r\n                            key={date+b}\r\n                            rowSpan={InfoList[2]}\r\n                            onClick={()=>{setChosenBook(InfoList[0]); setChosenId(InfoList[3])}}>\r\n                                {InfoList[0]['customerName']}\r\n                                <br/>\r\n                                {InfoList[0]['serviceName']}\r\n                            </StyledTableCell>\r\n                        )\r\n                    }\r\n                }\r\n                else{\r\n                    column.push(\r\n                        <StyledTableCell key={date +b}></StyledTableCell>\r\n                    )\r\n                }\r\n            }\r\n        }else{\r\n            for(let a = 0; a < numberOfColumns; a++){\r\n                let date2 = new Date(date);\r\n                date2.setDate(date2.getDate() + a)\r\n                let InfoList = checkBook(date2);\r\n                if(InfoList){\r\n                    if(InfoList[1]){\r\n                        column.push(\r\n                            <StyledTableCell \r\n                            className={classes.Booked} \r\n                            key={date2}\r\n                            rowSpan={InfoList[2]}\r\n                            onClick={()=>{setChosenBook(InfoList[0]); setChosenId(InfoList[3])}}>\r\n                                {InfoList[0]['customerName']}\r\n                                <br/>\r\n                                {InfoList[0]['serviceName']}\r\n                            </StyledTableCell>\r\n                        )\r\n                    }\r\n                }\r\n                else{\r\n                    column.push(\r\n                        <StyledTableCell key={date2}></StyledTableCell>\r\n                    )\r\n                }\r\n            }\r\n        }\r\n        rows.push(<StyledTableRow key={i}>\r\n                    <StyledTableCell>{formatNumberHandler(date.getHours())}:{formatNumberHandler(date.getMinutes())}</StyledTableCell>\r\n                    {column}\r\n                </StyledTableRow>);\r\n    }\r\n    let showBook= null;\r\n        showBook = (\r\n            <Box className={classes.ShowBook}>\r\n                <Button variant=\"outlined\" \r\n                    startIcon={<AddCircleIcon/>}\r\n                    className={classes.Button}\r\n                    onClick={()=>{setShowForm(true);setEdit(false)}}>Tạo lịch hẹn</Button>\r\n                <SelectStaff setStaff={setStaff} staff={staff} config={config}/>\r\n                <TableContainer component={Paper} className={classes.Table}>\r\n                    <Table>\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <StyledTableCell>{staff}</StyledTableCell>\r\n                                {header}\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {rows}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                <ShowInfo \r\n                info={chosenBook} \r\n                id={chosenId}\r\n                notification={notificationRef}\r\n                setChosenBook = {setChosenBook}\r\n                setShowForm = {setShowForm}\r\n                setEdit={setEdit}/>\r\n            </Box>\r\n        )\r\n    if(staffLoading || bookLoading){\r\n        showBook=<Spinner/>\r\n    }\r\n\r\n    return (\r\n        <Aux>\r\n            <Header/>\r\n            <Box className={classes.Display}>\r\n                {!showForm && showBook}\r\n                {showForm && !edit &&\r\n                <Booking \r\n                setShowForm={setShowForm} \r\n                notification={notificationRef}\r\n                />}\r\n                {showForm && edit &&\r\n                <Booking \r\n                setShowForm={setShowForm} \r\n                notification={notificationRef}\r\n                currentId = {chosenId}\r\n                chosenBook = {chosenBook}\r\n                />}\r\n            </Box>\r\n            <Notifications ref={notificationRef}/>\r\n        </Aux>\r\n    )\r\n}\r\n\r\nexport default ShowBook;\r\n","C:\\reactjs\\munniehomespa-project\\src\\store.js",[],"C:\\reactjs\\munniehomespa-project\\src\\reducers\\index.js",[],"C:\\reactjs\\munniehomespa-project\\src\\reducers\\service.js",[],"C:\\reactjs\\munniehomespa-project\\src\\actions\\service.js",[],"C:\\reactjs\\munniehomespa-project\\src\\constants\\service.js",[],"C:\\reactjs\\munniehomespa-project\\src\\reducers\\voucher.js",[],"C:\\reactjs\\munniehomespa-project\\src\\constants\\voucher.js",[],"C:\\reactjs\\munniehomespa-project\\src\\actions\\voucher.js",[],"C:\\reactjs\\munniehomespa-project\\src\\reducers\\type.js",[],"C:\\reactjs\\munniehomespa-project\\src\\constants\\type.js",[],"C:\\reactjs\\munniehomespa-project\\src\\actions\\type.js",[],"C:\\reactjs\\munniehomespa-project\\src\\api\\api.js",[],"C:\\reactjs\\munniehomespa-project\\src\\reducers\\customer.js",[],"C:\\reactjs\\munniehomespa-project\\src\\constants\\customer.js",[],"C:\\reactjs\\munniehomespa-project\\src\\actions\\customer.js",[],"C:\\reactjs\\munniehomespa-project\\src\\reducers\\staff.js",[],"C:\\reactjs\\munniehomespa-project\\src\\actions\\staff.js",[],"C:\\reactjs\\munniehomespa-project\\src\\constants\\staff.js",[],"C:\\reactjs\\munniehomespa-project\\src\\reducers\\book.js",[],"C:\\reactjs\\munniehomespa-project\\src\\constants\\book.js",[],"C:\\reactjs\\munniehomespa-project\\src\\actions\\book.js",[],"C:\\reactjs\\munniehomespa-project\\src\\pages\\ShowBook\\SelectStaff.js",[],"C:\\reactjs\\munniehomespa-project\\src\\pages\\ShowBook\\ShowInfo.js",["388","389"],"C:\\reactjs\\munniehomespa-project\\src\\pages\\ShowBook\\styles.js",[],"C:\\reactjs\\munniehomespa-project\\src\\components\\UI\\ConfirmMessage\\ConfirmMessage.js",[],{"ruleId":"390","replacedBy":"391"},{"ruleId":"392","replacedBy":"393"},{"ruleId":"394","severity":1,"message":"395","line":1,"column":16,"nodeType":"396","messageId":"397","endLine":1,"endColumn":24},{"ruleId":"394","severity":1,"message":"398","line":16,"column":11,"nodeType":"396","messageId":"397","endLine":16,"endColumn":23},{"ruleId":"394","severity":1,"message":"399","line":19,"column":11,"nodeType":"396","messageId":"397","endLine":19,"endColumn":20},{"ruleId":"394","severity":1,"message":"395","line":1,"column":17,"nodeType":"396","messageId":"397","endLine":1,"endColumn":25},{"ruleId":"394","severity":1,"message":"395","line":1,"column":16,"nodeType":"396","messageId":"397","endLine":1,"endColumn":24},{"ruleId":"390","replacedBy":"400"},{"ruleId":"392","replacedBy":"401"},{"ruleId":"394","severity":1,"message":"402","line":2,"column":8,"nodeType":"396","messageId":"397","endLine":2,"endColumn":15},{"ruleId":"394","severity":1,"message":"403","line":8,"column":8,"nodeType":"396","messageId":"397","endLine":8,"endColumn":16},{"ruleId":"394","severity":1,"message":"404","line":9,"column":8,"nodeType":"396","messageId":"397","endLine":9,"endColumn":15},{"ruleId":"394","severity":1,"message":"405","line":14,"column":23,"nodeType":"396","messageId":"397","endLine":14,"endColumn":34},{"ruleId":"394","severity":1,"message":"406","line":14,"column":11,"nodeType":"396","messageId":"397","endLine":14,"endColumn":24},{"ruleId":"394","severity":1,"message":"398","line":15,"column":11,"nodeType":"396","messageId":"397","endLine":15,"endColumn":23},{"ruleId":"394","severity":1,"message":"395","line":1,"column":16,"nodeType":"396","messageId":"397","endLine":1,"endColumn":24},{"ruleId":"394","severity":1,"message":"407","line":1,"column":26,"nodeType":"396","messageId":"397","endLine":1,"endColumn":35},{"ruleId":"394","severity":1,"message":"408","line":18,"column":11,"nodeType":"396","messageId":"397","endLine":18,"endColumn":21},{"ruleId":"394","severity":1,"message":"409","line":3,"column":9,"nodeType":"396","messageId":"397","endLine":3,"endColumn":19},{"ruleId":"394","severity":1,"message":"410","line":3,"column":21,"nodeType":"396","messageId":"397","endLine":3,"endColumn":25},{"ruleId":"394","severity":1,"message":"411","line":5,"column":25,"nodeType":"396","messageId":"397","endLine":5,"endColumn":37},{"ruleId":"394","severity":1,"message":"408","line":24,"column":11,"nodeType":"396","messageId":"397","endLine":24,"endColumn":21},{"ruleId":"394","severity":1,"message":"399","line":24,"column":11,"nodeType":"396","messageId":"397","endLine":24,"endColumn":20},{"ruleId":"394","severity":1,"message":"398","line":20,"column":11,"nodeType":"396","messageId":"397","endLine":20,"endColumn":23},{"ruleId":"394","severity":1,"message":"399","line":23,"column":11,"nodeType":"396","messageId":"397","endLine":23,"endColumn":20},{"ruleId":"394","severity":1,"message":"412","line":24,"column":11,"nodeType":"396","messageId":"397","endLine":24,"endColumn":23},{"ruleId":"413","severity":1,"message":"414","line":30,"column":8,"nodeType":"415","endLine":30,"endColumn":10,"suggestions":"416"},{"ruleId":"394","severity":1,"message":"406","line":23,"column":11,"nodeType":"396","messageId":"397","endLine":23,"endColumn":24},{"ruleId":"394","severity":1,"message":"417","line":1,"column":37,"nodeType":"396","messageId":"397","endLine":1,"endColumn":43},{"ruleId":"394","severity":1,"message":"395","line":1,"column":16,"nodeType":"396","messageId":"397","endLine":1,"endColumn":24},{"ruleId":"394","severity":1,"message":"418","line":2,"column":22,"nodeType":"396","messageId":"397","endLine":2,"endColumn":32},{"ruleId":"394","severity":1,"message":"408","line":54,"column":11,"nodeType":"396","messageId":"397","endLine":54,"endColumn":21},{"ruleId":"394","severity":1,"message":"419","line":57,"column":11,"nodeType":"396","messageId":"397","endLine":57,"endColumn":20},{"ruleId":"394","severity":1,"message":"420","line":1,"column":48,"nodeType":"396","messageId":"397","endLine":1,"endColumn":58},{"ruleId":"394","severity":1,"message":"405","line":6,"column":23,"nodeType":"396","messageId":"397","endLine":6,"endColumn":34},"no-native-reassign",["421"],"no-negated-in-lhs",["422"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'serviceError' is assigned a value but never used.","'typeError' is assigned a value but never used.",["421"],["422"],"'classes' is defined but never used.","'firebase' is defined but never used.","'Spinner' is defined but never used.","'useSelector' is defined but never used.","'customerError' is assigned a value but never used.","'useEffect' is defined but never used.","'staffError' is assigned a value but never used.","'Typography' is defined but never used.","'Grid' is defined but never used.","'ListItemIcon' is defined but never used.","'voucherError' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'voucherList'. Either include them or remove the dependency array.","ArrayExpression",["423"],"'useRef' is defined but never used.","'makeStyles' is defined but never used.","'bookError' is assigned a value but never used.","'InputLabel' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"424","fix":"425"},"Update the dependencies array to be: [dispatch, voucherList]",{"range":"426","text":"427"},[1371,1373],"[dispatch, voucherList]"]